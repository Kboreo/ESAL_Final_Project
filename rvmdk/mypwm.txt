; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\rvmdk\mypwm.o --asm_dir=.\rvmdk\ --list_dir=.\rvmdk\ --depend=.\rvmdk\mypwm.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\.. -I.\driverlib -I.\src -I.\inc -I.\RTE\_project -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DTM4C123GH6PM -Drvmdk -DPART_TM4C123GH6PM -DTARGET_IS_TM4C123_RB1 --omf_browse=.\rvmdk\mypwm.crf myPWM.c]
                          THUMB

                          AREA ||i.delayMS||, CODE, READONLY, ALIGN=1

                  delayMS PROC
;;;57     //Simple delay function.
;;;58     void delayMS(int ms) 
000000  b570              PUSH     {r4-r6,lr}
;;;59     {
000002  4604              MOV      r4,r0
;;;60         SysCtlDelay((SysCtlClockGet()/(3*1000))*ms);
000004  f7fffffe          BL       SysCtlClockGet
000008  f64031b8          MOV      r1,#0xbb8
00000c  fbb0f0f1          UDIV     r0,r0,r1
000010  fb00f504          MUL      r5,r0,r4
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       SysCtlDelay
;;;61     }
00001a  bd70              POP      {r4-r6,pc}
;;;62     
                          ENDP


                          AREA ||i.setupPWM||, CODE, READONLY, ALIGN=2

                  setupPWM PROC
;;;16     //Function that sets up the PWM
;;;17     void setupPWM(void)
000000  b510              PUSH     {r4,lr}
;;;18     {
;;;19     	//Set the clock to 16MHZ
;;;20       SysCtlClockSet(SYSCTL_SYSDIV_1 | SYSCTL_USE_OSC |   SYSCTL_OSC_MAIN | SYSCTL_XTAL_16MHZ);
000002  481b              LDR      r0,|L2.112|
000004  f7fffffe          BL       SysCtlClockSet
;;;21     	
;;;22     	//Configure PWM Clock to match system
;;;23       SysCtlPWMClockSet(SYSCTL_PWMDIV_1);
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       SysCtlPWMClockSet
;;;24     	
;;;25     	// Enable the peripherals used by this program.
;;;26       SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);
00000e  4819              LDR      r0,|L2.116|
000010  f7fffffe          BL       SysCtlPeripheralEnable
;;;27       SysCtlPeripheralEnable(SYSCTL_PERIPH_PWM1);  //The Tiva Launchpad has two modules (0 and 1). Module 1 covers the LED pins
000014  4818              LDR      r0,|L2.120|
000016  f7fffffe          BL       SysCtlPeripheralEnable
;;;28     	
;;;29     	//Wait for the PWM1 module to be ready.
;;;30     	//
;;;31     	while(!SysCtlPeripheralReady(SYSCTL_PERIPH_PWM1))
00001a  bf00              NOP      
                  |L2.28|
00001c  4816              LDR      r0,|L2.120|
00001e  f7fffffe          BL       SysCtlPeripheralReady
000022  2800              CMP      r0,#0
000024  d0fa              BEQ      |L2.28|
;;;32     	{
;;;33     		
;;;34     	}
;;;35     	
;;;36     	//Configure PF2 Pin as PWM
;;;37       GPIOPinConfigure(GPIO_PF2_M1PWM6);
000026  4815              LDR      r0,|L2.124|
000028  f7fffffe          BL       GPIOPinConfigure
;;;38     	GPIOPinTypePWM(GPIO_PORTF_BASE, GPIO_PIN_2);
00002c  2104              MOVS     r1,#4
00002e  4814              LDR      r0,|L2.128|
000030  f7fffffe          BL       GPIOPinTypePWM
;;;39     	
;;;40     	//Configure PWM Options
;;;41     	//PWM_GEN_3 Covers M1PWM6
;;;42     	PWMGenConfigure(PWM1_BASE, PWM_GEN_3, PWM_GEN_MODE_DOWN | PWM_GEN_MODE_NO_SYNC);
000034  2200              MOVS     r2,#0
000036  f44f7180          MOV      r1,#0x100
00003a  4812              LDR      r0,|L2.132|
00003c  f7fffffe          BL       PWMGenConfigure
;;;43     	
;;;44     	//Set the Period (expressed in clock ticks)
;;;45     	PWMGenPeriodSet(PWM1_BASE, PWM_GEN_3, 320);
000040  f44f72a0          MOV      r2,#0x140
000044  f44f7180          MOV      r1,#0x100
000048  480e              LDR      r0,|L2.132|
00004a  f7fffffe          BL       PWMGenPeriodSet
;;;46     	
;;;47     	//Set PWM duty-50% (Period/2)
;;;48     	PWMPulseWidthSet(PWM1_BASE, PWM_OUT_6, 100);
00004e  2264              MOVS     r2,#0x64
000050  f44f7183          MOV      r1,#0x106
000054  480b              LDR      r0,|L2.132|
000056  f7fffffe          BL       PWMPulseWidthSet
;;;49     	
;;;50     	// Enable the PWM generator
;;;51     	PWMGenEnable(PWM1_BASE, PWM_GEN_3);
00005a  f44f7180          MOV      r1,#0x100
00005e  4809              LDR      r0,|L2.132|
000060  f7fffffe          BL       PWMGenEnable
;;;52     	
;;;53     	// Turn on the Output pins
;;;54     	PWMOutputState(PWM1_BASE, PWM_OUT_6_BIT, true);
000064  2201              MOVS     r2,#1
000066  2140              MOVS     r1,#0x40
000068  4806              LDR      r0,|L2.132|
00006a  f7fffffe          BL       PWMOutputState
;;;55     }
00006e  bd10              POP      {r4,pc}
;;;56     
                          ENDP

                  |L2.112|
                          DCD      0x07803d40
                  |L2.116|
                          DCD      0xf0000805
                  |L2.120|
                          DCD      0xf0004001
                  |L2.124|
                          DCD      0x00050805
                  |L2.128|
                          DCD      0x40025000
                  |L2.132|
                          DCD      0x40029000
