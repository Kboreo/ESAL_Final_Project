; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\rvmdk\calibrate.o --asm_dir=.\rvmdk\ --list_dir=.\rvmdk\ --depend=.\rvmdk\calibrate.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\.. -I.\driverlib -I.\src -I.\inc -I.\RTE\_project -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DTM4C123GH6PM -Drvmdk -DPART_TM4C123GH6PM -DTARGET_IS_TM4C123_RB1 --omf_browse=.\rvmdk\calibrate.crf Calibrate.c]
                          THUMB

                          AREA ||i.Calibrate||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  Calibrate PROC
;;;47     
;;;48     void Calibrate (void)
000000  b51c              PUSH     {r2-r4,lr}
;;;49     {
;;;50     	
;;;51     	
;;;52     	//PWMPulseWidthSet(PWM1_BASE, PWM_OUT_6, 0);
;;;53     	stopmotor();
000002  f7fffffe          BL       stopmotor
;;;54     			
;;;55     	printf("Press any key to calibrate\n motor will turn on "); //lets the user know to get ready
000006  a0f4              ADR      r0,|L1.984|
000008  f7fffffe          BL       __2printf
;;;56     	ct = getc(stdin); //Gets a char from the terminal from the user.
00000c  48fe              LDR      r0,|L1.1032|
00000e  f7fffffe          BL       getc
000012  49fe              LDR      r1,|L1.1036|
000014  7008              STRB     r0,[r1,#0]
;;;57     	printf("You entered %c\n\n",ct); //Lets the user know what they have selected
000016  4608              MOV      r0,r1
000018  7801              LDRB     r1,[r0,#0]  ; ct
00001a  a0fd              ADR      r0,|L1.1040|
00001c  f7fffffe          BL       __2printf
;;;58     	
;;;59     	//give 100% PWM to motor
;;;60     	PWMPulseWidthSet(PWM1_BASE, PWM_OUT_6, 6400);
000020  f44f52c8          MOV      r2,#0x1900
000024  f44f7183          MOV      r1,#0x106
000028  48fe              LDR      r0,|L1.1060|
00002a  f7fffffe          BL       PWMPulseWidthSet
;;;61     	
;;;62     	//sets current speed equal to calspeed(n)
;;;63     	//waits for current speed to change (10mS) then repeats
;;;64     	calspeed0 = ReadEncoder();
00002e  f7fffffe          BL       ReadEncoder
000032  48fd              LDR      r0,|L1.1064|
000034  ed800b00          VSTR     d0,[r0,#0]
;;;65     	tempspeed = calspeed0;
000038  ed900b00          VLDR     d0,[r0,#0]
00003c  48fb              LDR      r0,|L1.1068|
00003e  ed800b00          VSTR     d0,[r0,#0]
;;;66     	
;;;67     	while(tempspeed <= calspeed0){
000042  e004              B        |L1.78|
                  |L1.68|
;;;68     	tempspeed = ReadEncoder();
000044  f7fffffe          BL       ReadEncoder
000048  48f8              LDR      r0,|L1.1068|
00004a  ed800b00          VSTR     d0,[r0,#0]
                  |L1.78|
00004e  48f6              LDR      r0,|L1.1064|
000050  ed900b00          VLDR     d0,[r0,#0]            ;67
000054  ec532b10          VMOV     r2,r3,d0              ;67
000058  48f4              LDR      r0,|L1.1068|
00005a  ed900b00          VLDR     d0,[r0,#0]            ;67
00005e  ec510b10          VMOV     r0,r1,d0              ;67
000062  f7fffffe          BL       __aeabi_cdcmple
000066  d9ed              BLS      |L1.68|
;;;69     	}
;;;70     	calspeed1 = tempspeed;
000068  48f0              LDR      r0,|L1.1068|
00006a  ed900b00          VLDR     d0,[r0,#0]
00006e  48f0              LDR      r0,|L1.1072|
000070  ed800b00          VSTR     d0,[r0,#0]
;;;71     	
;;;72     	while(tempspeed <= calspeed1){
000074  e004              B        |L1.128|
                  |L1.118|
;;;73     	tempspeed = ReadEncoder();
000076  f7fffffe          BL       ReadEncoder
00007a  48ec              LDR      r0,|L1.1068|
00007c  ed800b00          VSTR     d0,[r0,#0]
                  |L1.128|
000080  48eb              LDR      r0,|L1.1072|
000082  ed900b00          VLDR     d0,[r0,#0]            ;72
000086  ec532b10          VMOV     r2,r3,d0              ;72
00008a  48e8              LDR      r0,|L1.1068|
00008c  ed900b00          VLDR     d0,[r0,#0]            ;72
000090  ec510b10          VMOV     r0,r1,d0              ;72
000094  f7fffffe          BL       __aeabi_cdcmple
000098  d9ed              BLS      |L1.118|
;;;74     	}
;;;75     	calspeed2 = tempspeed;
00009a  48e4              LDR      r0,|L1.1068|
00009c  ed900b00          VLDR     d0,[r0,#0]
0000a0  48e4              LDR      r0,|L1.1076|
0000a2  ed800b00          VSTR     d0,[r0,#0]
;;;76     	
;;;77     	//if motor has met its final velocity break statement will allow program to exit while loop
;;;78     	while(tempspeed <= calspeed2){
0000a6  e010              B        |L1.202|
                  |L1.168|
;;;79     	tempspeed = ReadEncoder();
0000a8  f7fffffe          BL       ReadEncoder
0000ac  48df              LDR      r0,|L1.1068|
0000ae  ed800b00          VSTR     d0,[r0,#0]
;;;80     		i++;
0000b2  48e1              LDR      r0,|L1.1080|
0000b4  6800              LDR      r0,[r0,#0]  ; i
0000b6  1c40              ADDS     r0,r0,#1
0000b8  49df              LDR      r1,|L1.1080|
0000ba  6008              STR      r0,[r1,#0]  ; i
;;;81     		if (i > 9999){
0000bc  4608              MOV      r0,r1
0000be  6800              LDR      r0,[r0,#0]  ; i
0000c0  f242710f          MOV      r1,#0x270f
0000c4  4288              CMP      r0,r1
0000c6  dd00              BLE      |L1.202|
;;;82     			break;
0000c8  e00c              B        |L1.228|
                  |L1.202|
0000ca  48da              LDR      r0,|L1.1076|
0000cc  ed900b00          VLDR     d0,[r0,#0]            ;78
0000d0  ec532b10          VMOV     r2,r3,d0              ;78
0000d4  48d5              LDR      r0,|L1.1068|
0000d6  ed900b00          VLDR     d0,[r0,#0]            ;78
0000da  ec510b10          VMOV     r0,r1,d0              ;78
0000de  f7fffffe          BL       __aeabi_cdcmple
0000e2  d9e1              BLS      |L1.168|
                  |L1.228|
0000e4  bf00              NOP      
;;;83     		}
;;;84     		}
;;;85     	i=0;	
0000e6  2000              MOVS     r0,#0
0000e8  49d3              LDR      r1,|L1.1080|
0000ea  6008              STR      r0,[r1,#0]  ; i
;;;86     	calspeed3 = tempspeed;
0000ec  48cf              LDR      r0,|L1.1068|
0000ee  ed900b00          VLDR     d0,[r0,#0]
0000f2  48d2              LDR      r0,|L1.1084|
0000f4  ed800b00          VSTR     d0,[r0,#0]
;;;87     	
;;;88     	while(tempspeed <= calspeed3){
0000f8  e010              B        |L1.284|
                  |L1.250|
;;;89     	tempspeed = ReadEncoder();
0000fa  f7fffffe          BL       ReadEncoder
0000fe  48cb              LDR      r0,|L1.1068|
000100  ed800b00          VSTR     d0,[r0,#0]
;;;90     		i++;
000104  48cc              LDR      r0,|L1.1080|
000106  6800              LDR      r0,[r0,#0]  ; i
000108  1c40              ADDS     r0,r0,#1
00010a  49cb              LDR      r1,|L1.1080|
00010c  6008              STR      r0,[r1,#0]  ; i
;;;91     		if (i > 9999){
00010e  4608              MOV      r0,r1
000110  6800              LDR      r0,[r0,#0]  ; i
000112  f242710f          MOV      r1,#0x270f
000116  4288              CMP      r0,r1
000118  dd00              BLE      |L1.284|
;;;92     			break;
00011a  e00c              B        |L1.310|
                  |L1.284|
00011c  48c7              LDR      r0,|L1.1084|
00011e  ed900b00          VLDR     d0,[r0,#0]            ;88
000122  ec532b10          VMOV     r2,r3,d0              ;88
000126  48c1              LDR      r0,|L1.1068|
000128  ed900b00          VLDR     d0,[r0,#0]            ;88
00012c  ec510b10          VMOV     r0,r1,d0              ;88
000130  f7fffffe          BL       __aeabi_cdcmple
000134  d9e1              BLS      |L1.250|
                  |L1.310|
000136  bf00              NOP      
;;;93     		}
;;;94     		}
;;;95     	i=0;	
000138  2000              MOVS     r0,#0
00013a  49bf              LDR      r1,|L1.1080|
00013c  6008              STR      r0,[r1,#0]  ; i
;;;96     	calspeed4 = tempspeed;
00013e  48bb              LDR      r0,|L1.1068|
000140  ed900b00          VLDR     d0,[r0,#0]
000144  48be              LDR      r0,|L1.1088|
000146  ed800b00          VSTR     d0,[r0,#0]
;;;97     	
;;;98     	while(tempspeed <= calspeed4){
00014a  e010              B        |L1.366|
                  |L1.332|
;;;99     	tempspeed = ReadEncoder();
00014c  f7fffffe          BL       ReadEncoder
000150  48b6              LDR      r0,|L1.1068|
000152  ed800b00          VSTR     d0,[r0,#0]
;;;100    		i++;
000156  48b8              LDR      r0,|L1.1080|
000158  6800              LDR      r0,[r0,#0]  ; i
00015a  1c40              ADDS     r0,r0,#1
00015c  49b6              LDR      r1,|L1.1080|
00015e  6008              STR      r0,[r1,#0]  ; i
;;;101    		if (i > 9999){
000160  4608              MOV      r0,r1
000162  6800              LDR      r0,[r0,#0]  ; i
000164  f242710f          MOV      r1,#0x270f
000168  4288              CMP      r0,r1
00016a  dd00              BLE      |L1.366|
;;;102    			break;
00016c  e00c              B        |L1.392|
                  |L1.366|
00016e  48b4              LDR      r0,|L1.1088|
000170  ed900b00          VLDR     d0,[r0,#0]            ;98
000174  ec532b10          VMOV     r2,r3,d0              ;98
000178  48ac              LDR      r0,|L1.1068|
00017a  ed900b00          VLDR     d0,[r0,#0]            ;98
00017e  ec510b10          VMOV     r0,r1,d0              ;98
000182  f7fffffe          BL       __aeabi_cdcmple
000186  d9e1              BLS      |L1.332|
                  |L1.392|
000188  bf00              NOP      
;;;103    		}
;;;104    		}	
;;;105    	i=0;
00018a  2000              MOVS     r0,#0
00018c  49aa              LDR      r1,|L1.1080|
00018e  6008              STR      r0,[r1,#0]  ; i
;;;106    	calspeed5 = tempspeed;
000190  48a6              LDR      r0,|L1.1068|
000192  ed900b00          VLDR     d0,[r0,#0]
000196  48ab              LDR      r0,|L1.1092|
000198  ed800b00          VSTR     d0,[r0,#0]
;;;107    	
;;;108    	while(tempspeed <= calspeed5){
00019c  e010              B        |L1.448|
                  |L1.414|
;;;109    	tempspeed = ReadEncoder();
00019e  f7fffffe          BL       ReadEncoder
0001a2  48a2              LDR      r0,|L1.1068|
0001a4  ed800b00          VSTR     d0,[r0,#0]
;;;110    		i++;
0001a8  48a3              LDR      r0,|L1.1080|
0001aa  6800              LDR      r0,[r0,#0]  ; i
0001ac  1c40              ADDS     r0,r0,#1
0001ae  49a2              LDR      r1,|L1.1080|
0001b0  6008              STR      r0,[r1,#0]  ; i
;;;111    		if (i > 9999){
0001b2  4608              MOV      r0,r1
0001b4  6800              LDR      r0,[r0,#0]  ; i
0001b6  f242710f          MOV      r1,#0x270f
0001ba  4288              CMP      r0,r1
0001bc  dd00              BLE      |L1.448|
;;;112    			break;
0001be  e00c              B        |L1.474|
                  |L1.448|
0001c0  48a0              LDR      r0,|L1.1092|
0001c2  ed900b00          VLDR     d0,[r0,#0]            ;108
0001c6  ec532b10          VMOV     r2,r3,d0              ;108
0001ca  4898              LDR      r0,|L1.1068|
0001cc  ed900b00          VLDR     d0,[r0,#0]            ;108
0001d0  ec510b10          VMOV     r0,r1,d0              ;108
0001d4  f7fffffe          BL       __aeabi_cdcmple
0001d8  d9e1              BLS      |L1.414|
                  |L1.474|
0001da  bf00              NOP      
;;;113    		}
;;;114    		}
;;;115    	i=0;	
0001dc  2000              MOVS     r0,#0
0001de  4996              LDR      r1,|L1.1080|
0001e0  6008              STR      r0,[r1,#0]  ; i
;;;116    	calspeed6 = tempspeed;
0001e2  4892              LDR      r0,|L1.1068|
0001e4  ed900b00          VLDR     d0,[r0,#0]
0001e8  4897              LDR      r0,|L1.1096|
0001ea  ed800b00          VSTR     d0,[r0,#0]
;;;117    	
;;;118    	while(tempspeed <= calspeed6){
0001ee  e010              B        |L1.530|
                  |L1.496|
;;;119    	tempspeed = ReadEncoder();
0001f0  f7fffffe          BL       ReadEncoder
0001f4  488d              LDR      r0,|L1.1068|
0001f6  ed800b00          VSTR     d0,[r0,#0]
;;;120    		i++;
0001fa  488f              LDR      r0,|L1.1080|
0001fc  6800              LDR      r0,[r0,#0]  ; i
0001fe  1c40              ADDS     r0,r0,#1
000200  498d              LDR      r1,|L1.1080|
000202  6008              STR      r0,[r1,#0]  ; i
;;;121    		if (i > 9999){
000204  4608              MOV      r0,r1
000206  6800              LDR      r0,[r0,#0]  ; i
000208  f242710f          MOV      r1,#0x270f
00020c  4288              CMP      r0,r1
00020e  dd00              BLE      |L1.530|
;;;122    			break;
000210  e00c              B        |L1.556|
                  |L1.530|
000212  488d              LDR      r0,|L1.1096|
000214  ed900b00          VLDR     d0,[r0,#0]            ;118
000218  ec532b10          VMOV     r2,r3,d0              ;118
00021c  4883              LDR      r0,|L1.1068|
00021e  ed900b00          VLDR     d0,[r0,#0]            ;118
000222  ec510b10          VMOV     r0,r1,d0              ;118
000226  f7fffffe          BL       __aeabi_cdcmple
00022a  d9e1              BLS      |L1.496|
                  |L1.556|
00022c  bf00              NOP      
;;;123    		}
;;;124    		}
;;;125    	i=0;	
00022e  2000              MOVS     r0,#0
000230  4981              LDR      r1,|L1.1080|
000232  6008              STR      r0,[r1,#0]  ; i
;;;126    	calspeed7 = tempspeed;
000234  487d              LDR      r0,|L1.1068|
000236  ed900b00          VLDR     d0,[r0,#0]
00023a  4884              LDR      r0,|L1.1100|
00023c  ed800b00          VSTR     d0,[r0,#0]
;;;127    	
;;;128    	while(tempspeed <= calspeed7){
000240  e010              B        |L1.612|
                  |L1.578|
;;;129    	tempspeed = ReadEncoder();
000242  f7fffffe          BL       ReadEncoder
000246  4879              LDR      r0,|L1.1068|
000248  ed800b00          VSTR     d0,[r0,#0]
;;;130    		i++;
00024c  487a              LDR      r0,|L1.1080|
00024e  6800              LDR      r0,[r0,#0]  ; i
000250  1c40              ADDS     r0,r0,#1
000252  4979              LDR      r1,|L1.1080|
000254  6008              STR      r0,[r1,#0]  ; i
;;;131    		if (i > 9999){
000256  4608              MOV      r0,r1
000258  6800              LDR      r0,[r0,#0]  ; i
00025a  f242710f          MOV      r1,#0x270f
00025e  4288              CMP      r0,r1
000260  dd00              BLE      |L1.612|
;;;132    			break;
000262  e00c              B        |L1.638|
                  |L1.612|
000264  4879              LDR      r0,|L1.1100|
000266  ed900b00          VLDR     d0,[r0,#0]            ;128
00026a  ec532b10          VMOV     r2,r3,d0              ;128
00026e  486f              LDR      r0,|L1.1068|
000270  ed900b00          VLDR     d0,[r0,#0]            ;128
000274  ec510b10          VMOV     r0,r1,d0              ;128
000278  f7fffffe          BL       __aeabi_cdcmple
00027c  d9e1              BLS      |L1.578|
                  |L1.638|
00027e  bf00              NOP      
;;;133    		}
;;;134    		}	
;;;135    	i=0;
000280  2000              MOVS     r0,#0
000282  496d              LDR      r1,|L1.1080|
000284  6008              STR      r0,[r1,#0]  ; i
;;;136    	calspeed8 = tempspeed;
000286  4869              LDR      r0,|L1.1068|
000288  ed900b00          VLDR     d0,[r0,#0]
00028c  4870              LDR      r0,|L1.1104|
00028e  ed800b00          VSTR     d0,[r0,#0]
;;;137    	
;;;138    	while(tempspeed <= calspeed8){
000292  e010              B        |L1.694|
                  |L1.660|
;;;139    	tempspeed = ReadEncoder();
000294  f7fffffe          BL       ReadEncoder
000298  4864              LDR      r0,|L1.1068|
00029a  ed800b00          VSTR     d0,[r0,#0]
;;;140    		i++;
00029e  4866              LDR      r0,|L1.1080|
0002a0  6800              LDR      r0,[r0,#0]  ; i
0002a2  1c40              ADDS     r0,r0,#1
0002a4  4964              LDR      r1,|L1.1080|
0002a6  6008              STR      r0,[r1,#0]  ; i
;;;141    		if (i > 9999)
0002a8  4608              MOV      r0,r1
0002aa  6800              LDR      r0,[r0,#0]  ; i
0002ac  f242710f          MOV      r1,#0x270f
0002b0  4288              CMP      r0,r1
0002b2  dd00              BLE      |L1.694|
;;;142    		{
;;;143    			break;
0002b4  e00c              B        |L1.720|
                  |L1.694|
0002b6  4866              LDR      r0,|L1.1104|
0002b8  ed900b00          VLDR     d0,[r0,#0]            ;138
0002bc  ec532b10          VMOV     r2,r3,d0              ;138
0002c0  485a              LDR      r0,|L1.1068|
0002c2  ed900b00          VLDR     d0,[r0,#0]            ;138
0002c6  ec510b10          VMOV     r0,r1,d0              ;138
0002ca  f7fffffe          BL       __aeabi_cdcmple
0002ce  d9e1              BLS      |L1.660|
                  |L1.720|
0002d0  bf00              NOP      
;;;144    		}
;;;145    		}	
;;;146    	i=0;
0002d2  2000              MOVS     r0,#0
0002d4  4958              LDR      r1,|L1.1080|
0002d6  6008              STR      r0,[r1,#0]  ; i
;;;147    		calspeed9 = tempspeed;
0002d8  4854              LDR      r0,|L1.1068|
0002da  ed900b00          VLDR     d0,[r0,#0]
0002de  485d              LDR      r0,|L1.1108|
0002e0  ed800b00          VSTR     d0,[r0,#0]
;;;148    	
;;;149    	while(tempspeed <= calspeed9){
0002e4  e010              B        |L1.776|
                  |L1.742|
;;;150    	tempspeed = ReadEncoder();
0002e6  f7fffffe          BL       ReadEncoder
0002ea  4850              LDR      r0,|L1.1068|
0002ec  ed800b00          VSTR     d0,[r0,#0]
;;;151    		i++;
0002f0  4851              LDR      r0,|L1.1080|
0002f2  6800              LDR      r0,[r0,#0]  ; i
0002f4  1c40              ADDS     r0,r0,#1
0002f6  4950              LDR      r1,|L1.1080|
0002f8  6008              STR      r0,[r1,#0]  ; i
;;;152    		if (i > 9999){
0002fa  4608              MOV      r0,r1
0002fc  6800              LDR      r0,[r0,#0]  ; i
0002fe  f242710f          MOV      r1,#0x270f
000302  4288              CMP      r0,r1
000304  dd00              BLE      |L1.776|
;;;153    			break;
000306  e00c              B        |L1.802|
                  |L1.776|
000308  4852              LDR      r0,|L1.1108|
00030a  ed900b00          VLDR     d0,[r0,#0]            ;149
00030e  ec532b10          VMOV     r2,r3,d0              ;149
000312  4846              LDR      r0,|L1.1068|
000314  ed900b00          VLDR     d0,[r0,#0]            ;149
000318  ec510b10          VMOV     r0,r1,d0              ;149
00031c  f7fffffe          BL       __aeabi_cdcmple
000320  d9e1              BLS      |L1.742|
                  |L1.802|
000322  bf00              NOP      
;;;154    		}
;;;155    		}
;;;156    	i=0;	
000324  2000              MOVS     r0,#0
000326  4944              LDR      r1,|L1.1080|
000328  6008              STR      r0,[r1,#0]  ; i
;;;157    	calspeed10 = tempspeed;
00032a  4840              LDR      r0,|L1.1068|
00032c  ed900b00          VLDR     d0,[r0,#0]
000330  4849              LDR      r0,|L1.1112|
000332  ed800b00          VSTR     d0,[r0,#0]
;;;158    	
;;;159    	while(tempspeed <= calspeed10){
000336  e010              B        |L1.858|
                  |L1.824|
;;;160    	tempspeed = ReadEncoder();
000338  f7fffffe          BL       ReadEncoder
00033c  483b              LDR      r0,|L1.1068|
00033e  ed800b00          VSTR     d0,[r0,#0]
;;;161    		i++;
000342  483d              LDR      r0,|L1.1080|
000344  6800              LDR      r0,[r0,#0]  ; i
000346  1c40              ADDS     r0,r0,#1
000348  493b              LDR      r1,|L1.1080|
00034a  6008              STR      r0,[r1,#0]  ; i
;;;162    		if (i > 9999){
00034c  4608              MOV      r0,r1
00034e  6800              LDR      r0,[r0,#0]  ; i
000350  f242710f          MOV      r1,#0x270f
000354  4288              CMP      r0,r1
000356  dd00              BLE      |L1.858|
;;;163    			break;
000358  e00c              B        |L1.884|
                  |L1.858|
00035a  483f              LDR      r0,|L1.1112|
00035c  ed900b00          VLDR     d0,[r0,#0]            ;159
000360  ec532b10          VMOV     r2,r3,d0              ;159
000364  4831              LDR      r0,|L1.1068|
000366  ed900b00          VLDR     d0,[r0,#0]            ;159
00036a  ec510b10          VMOV     r0,r1,d0              ;159
00036e  f7fffffe          BL       __aeabi_cdcmple
000372  d9e1              BLS      |L1.824|
                  |L1.884|
000374  bf00              NOP      
;;;164    		}
;;;165    		}
;;;166    	i=0;	
000376  2000              MOVS     r0,#0
000378  492f              LDR      r1,|L1.1080|
00037a  6008              STR      r0,[r1,#0]  ; i
;;;167    	calspeed11 = tempspeed;
00037c  482b              LDR      r0,|L1.1068|
00037e  ed900b00          VLDR     d0,[r0,#0]
000382  4836              LDR      r0,|L1.1116|
000384  ed800b00          VSTR     d0,[r0,#0]
;;;168    	
;;;169    	while(tempspeed <= calspeed11){
000388  e010              B        |L1.940|
                  |L1.906|
;;;170    	tempspeed = ReadEncoder();
00038a  f7fffffe          BL       ReadEncoder
00038e  4827              LDR      r0,|L1.1068|
000390  ed800b00          VSTR     d0,[r0,#0]
;;;171    		i++;
000394  4828              LDR      r0,|L1.1080|
000396  6800              LDR      r0,[r0,#0]  ; i
000398  1c40              ADDS     r0,r0,#1
00039a  4927              LDR      r1,|L1.1080|
00039c  6008              STR      r0,[r1,#0]  ; i
;;;172    		if (i > 9999){
00039e  4608              MOV      r0,r1
0003a0  6800              LDR      r0,[r0,#0]  ; i
0003a2  f242710f          MOV      r1,#0x270f
0003a6  4288              CMP      r0,r1
0003a8  dd00              BLE      |L1.940|
;;;173    			break;
0003aa  e00c              B        |L1.966|
                  |L1.940|
0003ac  482b              LDR      r0,|L1.1116|
0003ae  ed900b00          VLDR     d0,[r0,#0]            ;169
0003b2  ec532b10          VMOV     r2,r3,d0              ;169
0003b6  481d              LDR      r0,|L1.1068|
0003b8  ed900b00          VLDR     d0,[r0,#0]            ;169
0003bc  ec510b10          VMOV     r0,r1,d0              ;169
0003c0  f7fffffe          BL       __aeabi_cdcmple
0003c4  d9e1              BLS      |L1.906|
                  |L1.966|
0003c6  bf00              NOP      
;;;174    		}
;;;175    		}	
;;;176    	i=0;
0003c8  2000              MOVS     r0,#0
0003ca  491b              LDR      r1,|L1.1080|
0003cc  6008              STR      r0,[r1,#0]  ; i
;;;177    	calspeed12 = tempspeed;
0003ce  4817              LDR      r0,|L1.1068|
0003d0  ed900b00          VLDR     d0,[r0,#0]
0003d4  4822              LDR      r0,|L1.1120|
0003d6  e045              B        |L1.1124|
                  |L1.984|
0003d8  50726573          DCB      "Press any key to calibrate\n motor will turn on ",0
0003dc  7320616e
0003e0  79206b65
0003e4  7920746f
0003e8  2063616c
0003ec  69627261
0003f0  74650a20
0003f4  6d6f746f
0003f8  72207769
0003fc  6c6c2074
000400  75726e20
000404  6f6e2000
                  |L1.1032|
                          DCD      __stdin
                  |L1.1036|
                          DCD      ||ct||
                  |L1.1040|
000410  596f7520          DCB      "You entered %c\n\n",0
000414  656e7465
000418  72656420
00041c  25630a0a
000420  00      
000421  00                DCB      0
000422  00                DCB      0
000423  00                DCB      0
                  |L1.1060|
                          DCD      0x40029000
                  |L1.1064|
                          DCD      calspeed0
                  |L1.1068|
                          DCD      tempspeed
                  |L1.1072|
                          DCD      calspeed1
                  |L1.1076|
                          DCD      calspeed2
                  |L1.1080|
                          DCD      i
                  |L1.1084|
                          DCD      calspeed3
                  |L1.1088|
                          DCD      calspeed4
                  |L1.1092|
                          DCD      calspeed5
                  |L1.1096|
                          DCD      calspeed6
                  |L1.1100|
                          DCD      calspeed7
                  |L1.1104|
                          DCD      calspeed8
                  |L1.1108|
                          DCD      calspeed9
                  |L1.1112|
                          DCD      calspeed10
                  |L1.1116|
                          DCD      calspeed11
                  |L1.1120|
                          DCD      calspeed12
                  |L1.1124|
000464  ed800b00          VSTR     d0,[r0,#0]
;;;178    	
;;;179    	while(tempspeed <= calspeed12){
000468  e010              B        |L1.1164|
                  |L1.1130|
;;;180    	tempspeed = ReadEncoder();
00046a  f7fffffe          BL       ReadEncoder
00046e  48fd              LDR      r0,|L1.2148|
000470  ed800b00          VSTR     d0,[r0,#0]
;;;181    		i++;
000474  48fc              LDR      r0,|L1.2152|
000476  6800              LDR      r0,[r0,#0]  ; i
000478  1c40              ADDS     r0,r0,#1
00047a  49fb              LDR      r1,|L1.2152|
00047c  6008              STR      r0,[r1,#0]  ; i
;;;182    		if (i > 9999){
00047e  4608              MOV      r0,r1
000480  6800              LDR      r0,[r0,#0]  ; i
000482  f242710f          MOV      r1,#0x270f
000486  4288              CMP      r0,r1
000488  dd00              BLE      |L1.1164|
;;;183    			break;
00048a  e00c              B        |L1.1190|
                  |L1.1164|
00048c  48f7              LDR      r0,|L1.2156|
00048e  ed900b00          VLDR     d0,[r0,#0]            ;179
000492  ec532b10          VMOV     r2,r3,d0              ;179
000496  48f3              LDR      r0,|L1.2148|
000498  ed900b00          VLDR     d0,[r0,#0]            ;179
00049c  ec510b10          VMOV     r0,r1,d0              ;179
0004a0  f7fffffe          BL       __aeabi_cdcmple
0004a4  d9e1              BLS      |L1.1130|
                  |L1.1190|
0004a6  bf00              NOP      
;;;184    		}
;;;185    		}
;;;186    	i=0;	
0004a8  2000              MOVS     r0,#0
0004aa  49ef              LDR      r1,|L1.2152|
0004ac  6008              STR      r0,[r1,#0]  ; i
;;;187    	calspeed13 = tempspeed;
0004ae  48ed              LDR      r0,|L1.2148|
0004b0  ed900b00          VLDR     d0,[r0,#0]
0004b4  48ee              LDR      r0,|L1.2160|
0004b6  ed800b00          VSTR     d0,[r0,#0]
;;;188    	
;;;189    	while(tempspeed <= calspeed13){
0004ba  e010              B        |L1.1246|
                  |L1.1212|
;;;190    	tempspeed = ReadEncoder();
0004bc  f7fffffe          BL       ReadEncoder
0004c0  48e8              LDR      r0,|L1.2148|
0004c2  ed800b00          VSTR     d0,[r0,#0]
;;;191    		i++;
0004c6  48e8              LDR      r0,|L1.2152|
0004c8  6800              LDR      r0,[r0,#0]  ; i
0004ca  1c40              ADDS     r0,r0,#1
0004cc  49e6              LDR      r1,|L1.2152|
0004ce  6008              STR      r0,[r1,#0]  ; i
;;;192    		if (i > 9999){
0004d0  4608              MOV      r0,r1
0004d2  6800              LDR      r0,[r0,#0]  ; i
0004d4  f242710f          MOV      r1,#0x270f
0004d8  4288              CMP      r0,r1
0004da  dd00              BLE      |L1.1246|
;;;193    			break;
0004dc  e00c              B        |L1.1272|
                  |L1.1246|
0004de  48e4              LDR      r0,|L1.2160|
0004e0  ed900b00          VLDR     d0,[r0,#0]            ;189
0004e4  ec532b10          VMOV     r2,r3,d0              ;189
0004e8  48de              LDR      r0,|L1.2148|
0004ea  ed900b00          VLDR     d0,[r0,#0]            ;189
0004ee  ec510b10          VMOV     r0,r1,d0              ;189
0004f2  f7fffffe          BL       __aeabi_cdcmple
0004f6  d9e1              BLS      |L1.1212|
                  |L1.1272|
0004f8  bf00              NOP      
;;;194    		}
;;;195    		}
;;;196    	i=0;	
0004fa  2000              MOVS     r0,#0
0004fc  49da              LDR      r1,|L1.2152|
0004fe  6008              STR      r0,[r1,#0]  ; i
;;;197    	calspeed14 = tempspeed;
000500  48d8              LDR      r0,|L1.2148|
000502  ed900b00          VLDR     d0,[r0,#0]
000506  48db              LDR      r0,|L1.2164|
000508  ed800b00          VSTR     d0,[r0,#0]
;;;198    	
;;;199    	while(tempspeed <= calspeed14){
00050c  e010              B        |L1.1328|
                  |L1.1294|
;;;200    	tempspeed = ReadEncoder();
00050e  f7fffffe          BL       ReadEncoder
000512  48d4              LDR      r0,|L1.2148|
000514  ed800b00          VSTR     d0,[r0,#0]
;;;201    		i++;
000518  48d3              LDR      r0,|L1.2152|
00051a  6800              LDR      r0,[r0,#0]  ; i
00051c  1c40              ADDS     r0,r0,#1
00051e  49d2              LDR      r1,|L1.2152|
000520  6008              STR      r0,[r1,#0]  ; i
;;;202    		if (i > 9999){
000522  4608              MOV      r0,r1
000524  6800              LDR      r0,[r0,#0]  ; i
000526  f242710f          MOV      r1,#0x270f
00052a  4288              CMP      r0,r1
00052c  dd00              BLE      |L1.1328|
;;;203    			break;
00052e  e00c              B        |L1.1354|
                  |L1.1328|
000530  48d0              LDR      r0,|L1.2164|
000532  ed900b00          VLDR     d0,[r0,#0]            ;199
000536  ec532b10          VMOV     r2,r3,d0              ;199
00053a  48ca              LDR      r0,|L1.2148|
00053c  ed900b00          VLDR     d0,[r0,#0]            ;199
000540  ec510b10          VMOV     r0,r1,d0              ;199
000544  f7fffffe          BL       __aeabi_cdcmple
000548  d9e1              BLS      |L1.1294|
                  |L1.1354|
00054a  bf00              NOP      
;;;204    		}
;;;205    		}	
;;;206    	i=0;
00054c  2000              MOVS     r0,#0
00054e  49c6              LDR      r1,|L1.2152|
000550  6008              STR      r0,[r1,#0]  ; i
;;;207    	calspeed15 = tempspeed;
000552  48c4              LDR      r0,|L1.2148|
000554  ed900b00          VLDR     d0,[r0,#0]
000558  48c7              LDR      r0,|L1.2168|
00055a  ed800b00          VSTR     d0,[r0,#0]
;;;208    	
;;;209    	while(tempspeed <= calspeed15){
00055e  e010              B        |L1.1410|
                  |L1.1376|
;;;210    	tempspeed = ReadEncoder();
000560  f7fffffe          BL       ReadEncoder
000564  48bf              LDR      r0,|L1.2148|
000566  ed800b00          VSTR     d0,[r0,#0]
;;;211    		i++;
00056a  48bf              LDR      r0,|L1.2152|
00056c  6800              LDR      r0,[r0,#0]  ; i
00056e  1c40              ADDS     r0,r0,#1
000570  49bd              LDR      r1,|L1.2152|
000572  6008              STR      r0,[r1,#0]  ; i
;;;212    		if (i > 9999)
000574  4608              MOV      r0,r1
000576  6800              LDR      r0,[r0,#0]  ; i
000578  f242710f          MOV      r1,#0x270f
00057c  4288              CMP      r0,r1
00057e  dd00              BLE      |L1.1410|
;;;213    		{
;;;214    			break;
000580  e00c              B        |L1.1436|
                  |L1.1410|
000582  48bd              LDR      r0,|L1.2168|
000584  ed900b00          VLDR     d0,[r0,#0]            ;209
000588  ec532b10          VMOV     r2,r3,d0              ;209
00058c  48b5              LDR      r0,|L1.2148|
00058e  ed900b00          VLDR     d0,[r0,#0]            ;209
000592  ec510b10          VMOV     r0,r1,d0              ;209
000596  f7fffffe          BL       __aeabi_cdcmple
00059a  d9e1              BLS      |L1.1376|
                  |L1.1436|
00059c  bf00              NOP      
;;;215    		}
;;;216    		}	
;;;217    	i=0;
00059e  2000              MOVS     r0,#0
0005a0  49b1              LDR      r1,|L1.2152|
0005a2  6008              STR      r0,[r1,#0]  ; i
;;;218    	calspeed16 = tempspeed;
0005a4  48af              LDR      r0,|L1.2148|
0005a6  ed900b00          VLDR     d0,[r0,#0]
0005aa  48b4              LDR      r0,|L1.2172|
0005ac  ed800b00          VSTR     d0,[r0,#0]
;;;219    	
;;;220    	while(tempspeed <= calspeed16){
0005b0  e010              B        |L1.1492|
                  |L1.1458|
;;;221    	tempspeed = ReadEncoder();
0005b2  f7fffffe          BL       ReadEncoder
0005b6  48ab              LDR      r0,|L1.2148|
0005b8  ed800b00          VSTR     d0,[r0,#0]
;;;222    		i++;
0005bc  48aa              LDR      r0,|L1.2152|
0005be  6800              LDR      r0,[r0,#0]  ; i
0005c0  1c40              ADDS     r0,r0,#1
0005c2  49a9              LDR      r1,|L1.2152|
0005c4  6008              STR      r0,[r1,#0]  ; i
;;;223    		if (i > 9999){
0005c6  4608              MOV      r0,r1
0005c8  6800              LDR      r0,[r0,#0]  ; i
0005ca  f242710f          MOV      r1,#0x270f
0005ce  4288              CMP      r0,r1
0005d0  dd00              BLE      |L1.1492|
;;;224    			break;
0005d2  e00c              B        |L1.1518|
                  |L1.1492|
0005d4  48a9              LDR      r0,|L1.2172|
0005d6  ed900b00          VLDR     d0,[r0,#0]            ;220
0005da  ec532b10          VMOV     r2,r3,d0              ;220
0005de  48a1              LDR      r0,|L1.2148|
0005e0  ed900b00          VLDR     d0,[r0,#0]            ;220
0005e4  ec510b10          VMOV     r0,r1,d0              ;220
0005e8  f7fffffe          BL       __aeabi_cdcmple
0005ec  d9e1              BLS      |L1.1458|
                  |L1.1518|
0005ee  bf00              NOP      
;;;225    		}
;;;226    		}
;;;227    	i=0;	
0005f0  2000              MOVS     r0,#0
0005f2  499d              LDR      r1,|L1.2152|
0005f4  6008              STR      r0,[r1,#0]  ; i
;;;228    	calspeed17 = tempspeed;
0005f6  489b              LDR      r0,|L1.2148|
0005f8  ed900b00          VLDR     d0,[r0,#0]
0005fc  48a0              LDR      r0,|L1.2176|
0005fe  ed800b00          VSTR     d0,[r0,#0]
;;;229    	
;;;230    	while(tempspeed <= calspeed17){
000602  e010              B        |L1.1574|
                  |L1.1540|
;;;231    	tempspeed = ReadEncoder();
000604  f7fffffe          BL       ReadEncoder
000608  4896              LDR      r0,|L1.2148|
00060a  ed800b00          VSTR     d0,[r0,#0]
;;;232    		i++;
00060e  4896              LDR      r0,|L1.2152|
000610  6800              LDR      r0,[r0,#0]  ; i
000612  1c40              ADDS     r0,r0,#1
000614  4994              LDR      r1,|L1.2152|
000616  6008              STR      r0,[r1,#0]  ; i
;;;233    		if (i > 9999){
000618  4608              MOV      r0,r1
00061a  6800              LDR      r0,[r0,#0]  ; i
00061c  f242710f          MOV      r1,#0x270f
000620  4288              CMP      r0,r1
000622  dd00              BLE      |L1.1574|
;;;234    			break;
000624  e00c              B        |L1.1600|
                  |L1.1574|
000626  4896              LDR      r0,|L1.2176|
000628  ed900b00          VLDR     d0,[r0,#0]            ;230
00062c  ec532b10          VMOV     r2,r3,d0              ;230
000630  488c              LDR      r0,|L1.2148|
000632  ed900b00          VLDR     d0,[r0,#0]            ;230
000636  ec510b10          VMOV     r0,r1,d0              ;230
00063a  f7fffffe          BL       __aeabi_cdcmple
00063e  d9e1              BLS      |L1.1540|
                  |L1.1600|
000640  bf00              NOP      
;;;235    		}
;;;236    		}
;;;237    	i=0;	
000642  2000              MOVS     r0,#0
000644  4988              LDR      r1,|L1.2152|
000646  6008              STR      r0,[r1,#0]  ; i
;;;238    	calspeed18 = tempspeed;
000648  4886              LDR      r0,|L1.2148|
00064a  ed900b00          VLDR     d0,[r0,#0]
00064e  488d              LDR      r0,|L1.2180|
000650  ed800b00          VSTR     d0,[r0,#0]
;;;239    	
;;;240    	while(tempspeed <= calspeed18){
000654  e010              B        |L1.1656|
                  |L1.1622|
;;;241    	tempspeed = ReadEncoder();
000656  f7fffffe          BL       ReadEncoder
00065a  4882              LDR      r0,|L1.2148|
00065c  ed800b00          VSTR     d0,[r0,#0]
;;;242    		i++;
000660  4881              LDR      r0,|L1.2152|
000662  6800              LDR      r0,[r0,#0]  ; i
000664  1c40              ADDS     r0,r0,#1
000666  4980              LDR      r1,|L1.2152|
000668  6008              STR      r0,[r1,#0]  ; i
;;;243    		if (i > 9999){
00066a  4608              MOV      r0,r1
00066c  6800              LDR      r0,[r0,#0]  ; i
00066e  f242710f          MOV      r1,#0x270f
000672  4288              CMP      r0,r1
000674  dd00              BLE      |L1.1656|
;;;244    			break;
000676  e00c              B        |L1.1682|
                  |L1.1656|
000678  4882              LDR      r0,|L1.2180|
00067a  ed900b00          VLDR     d0,[r0,#0]            ;240
00067e  ec532b10          VMOV     r2,r3,d0              ;240
000682  4878              LDR      r0,|L1.2148|
000684  ed900b00          VLDR     d0,[r0,#0]            ;240
000688  ec510b10          VMOV     r0,r1,d0              ;240
00068c  f7fffffe          BL       __aeabi_cdcmple
000690  d9e1              BLS      |L1.1622|
                  |L1.1682|
000692  bf00              NOP      
;;;245    		}
;;;246    		}	
;;;247    	i=0;
000694  2000              MOVS     r0,#0
000696  4974              LDR      r1,|L1.2152|
000698  6008              STR      r0,[r1,#0]  ; i
;;;248    	calspeed19 = tempspeed;
00069a  4872              LDR      r0,|L1.2148|
00069c  ed900b00          VLDR     d0,[r0,#0]
0006a0  4879              LDR      r0,|L1.2184|
0006a2  ed800b00          VSTR     d0,[r0,#0]
;;;249    	
;;;250    	while(tempspeed <= calspeed19){
0006a6  e010              B        |L1.1738|
                  |L1.1704|
;;;251    	tempspeed = ReadEncoder();
0006a8  f7fffffe          BL       ReadEncoder
0006ac  486d              LDR      r0,|L1.2148|
0006ae  ed800b00          VSTR     d0,[r0,#0]
;;;252    		i++;
0006b2  486d              LDR      r0,|L1.2152|
0006b4  6800              LDR      r0,[r0,#0]  ; i
0006b6  1c40              ADDS     r0,r0,#1
0006b8  496b              LDR      r1,|L1.2152|
0006ba  6008              STR      r0,[r1,#0]  ; i
;;;253    		if (i > 9999){
0006bc  4608              MOV      r0,r1
0006be  6800              LDR      r0,[r0,#0]  ; i
0006c0  f242710f          MOV      r1,#0x270f
0006c4  4288              CMP      r0,r1
0006c6  dd00              BLE      |L1.1738|
;;;254    			break;
0006c8  e00c              B        |L1.1764|
                  |L1.1738|
0006ca  486f              LDR      r0,|L1.2184|
0006cc  ed900b00          VLDR     d0,[r0,#0]            ;250
0006d0  ec532b10          VMOV     r2,r3,d0              ;250
0006d4  4863              LDR      r0,|L1.2148|
0006d6  ed900b00          VLDR     d0,[r0,#0]            ;250
0006da  ec510b10          VMOV     r0,r1,d0              ;250
0006de  f7fffffe          BL       __aeabi_cdcmple
0006e2  d9e1              BLS      |L1.1704|
                  |L1.1764|
0006e4  bf00              NOP      
;;;255    		}
;;;256    		}
;;;257    	i=0;	
0006e6  2000              MOVS     r0,#0
0006e8  495f              LDR      r1,|L1.2152|
0006ea  6008              STR      r0,[r1,#0]  ; i
;;;258    	calspeed20 = tempspeed;
0006ec  485d              LDR      r0,|L1.2148|
0006ee  ed900b00          VLDR     d0,[r0,#0]
0006f2  4866              LDR      r0,|L1.2188|
0006f4  ed800b00          VSTR     d0,[r0,#0]
;;;259    	
;;;260    	while(tempspeed <= calspeed20){
0006f8  e010              B        |L1.1820|
                  |L1.1786|
;;;261    	tempspeed = ReadEncoder();
0006fa  f7fffffe          BL       ReadEncoder
0006fe  4859              LDR      r0,|L1.2148|
000700  ed800b00          VSTR     d0,[r0,#0]
;;;262    		i++;
000704  4858              LDR      r0,|L1.2152|
000706  6800              LDR      r0,[r0,#0]  ; i
000708  1c40              ADDS     r0,r0,#1
00070a  4957              LDR      r1,|L1.2152|
00070c  6008              STR      r0,[r1,#0]  ; i
;;;263    		if (i > 9999){
00070e  4608              MOV      r0,r1
000710  6800              LDR      r0,[r0,#0]  ; i
000712  f242710f          MOV      r1,#0x270f
000716  4288              CMP      r0,r1
000718  dd00              BLE      |L1.1820|
;;;264    			break;
00071a  e00c              B        |L1.1846|
                  |L1.1820|
00071c  485b              LDR      r0,|L1.2188|
00071e  ed900b00          VLDR     d0,[r0,#0]            ;260
000722  ec532b10          VMOV     r2,r3,d0              ;260
000726  484f              LDR      r0,|L1.2148|
000728  ed900b00          VLDR     d0,[r0,#0]            ;260
00072c  ec510b10          VMOV     r0,r1,d0              ;260
000730  f7fffffe          BL       __aeabi_cdcmple
000734  d9e1              BLS      |L1.1786|
                  |L1.1846|
000736  bf00              NOP      
;;;265    		}
;;;266    		}
;;;267    	i=0;	
000738  2000              MOVS     r0,#0
00073a  494b              LDR      r1,|L1.2152|
00073c  6008              STR      r0,[r1,#0]  ; i
;;;268    	calspeed21 = tempspeed;
00073e  4849              LDR      r0,|L1.2148|
000740  ed900b00          VLDR     d0,[r0,#0]
000744  4852              LDR      r0,|L1.2192|
000746  ed800b00          VSTR     d0,[r0,#0]
;;;269    	
;;;270    	while(tempspeed <= calspeed21){
00074a  e010              B        |L1.1902|
                  |L1.1868|
;;;271    	tempspeed = ReadEncoder();
00074c  f7fffffe          BL       ReadEncoder
000750  4844              LDR      r0,|L1.2148|
000752  ed800b00          VSTR     d0,[r0,#0]
;;;272    		i++;
000756  4844              LDR      r0,|L1.2152|
000758  6800              LDR      r0,[r0,#0]  ; i
00075a  1c40              ADDS     r0,r0,#1
00075c  4942              LDR      r1,|L1.2152|
00075e  6008              STR      r0,[r1,#0]  ; i
;;;273    		if (i > 9999){
000760  4608              MOV      r0,r1
000762  6800              LDR      r0,[r0,#0]  ; i
000764  f242710f          MOV      r1,#0x270f
000768  4288              CMP      r0,r1
00076a  dd00              BLE      |L1.1902|
;;;274    			break;
00076c  e00c              B        |L1.1928|
                  |L1.1902|
00076e  4848              LDR      r0,|L1.2192|
000770  ed900b00          VLDR     d0,[r0,#0]            ;270
000774  ec532b10          VMOV     r2,r3,d0              ;270
000778  483a              LDR      r0,|L1.2148|
00077a  ed900b00          VLDR     d0,[r0,#0]            ;270
00077e  ec510b10          VMOV     r0,r1,d0              ;270
000782  f7fffffe          BL       __aeabi_cdcmple
000786  d9e1              BLS      |L1.1868|
                  |L1.1928|
000788  bf00              NOP      
;;;275    		}
;;;276    		}	
;;;277    	i=0;
00078a  2000              MOVS     r0,#0
00078c  4936              LDR      r1,|L1.2152|
00078e  6008              STR      r0,[r1,#0]  ; i
;;;278    	calspeed22 = tempspeed;
000790  4834              LDR      r0,|L1.2148|
000792  ed900b00          VLDR     d0,[r0,#0]
000796  483f              LDR      r0,|L1.2196|
000798  ed800b00          VSTR     d0,[r0,#0]
;;;279    	
;;;280    	while(tempspeed <= calspeed22){
00079c  e010              B        |L1.1984|
                  |L1.1950|
;;;281    	tempspeed = ReadEncoder();
00079e  f7fffffe          BL       ReadEncoder
0007a2  4830              LDR      r0,|L1.2148|
0007a4  ed800b00          VSTR     d0,[r0,#0]
;;;282    		i++;
0007a8  482f              LDR      r0,|L1.2152|
0007aa  6800              LDR      r0,[r0,#0]  ; i
0007ac  1c40              ADDS     r0,r0,#1
0007ae  492e              LDR      r1,|L1.2152|
0007b0  6008              STR      r0,[r1,#0]  ; i
;;;283    		if (i > 9999)
0007b2  4608              MOV      r0,r1
0007b4  6800              LDR      r0,[r0,#0]  ; i
0007b6  f242710f          MOV      r1,#0x270f
0007ba  4288              CMP      r0,r1
0007bc  dd00              BLE      |L1.1984|
;;;284    		{
;;;285    			break;
0007be  e00c              B        |L1.2010|
                  |L1.1984|
0007c0  4834              LDR      r0,|L1.2196|
0007c2  ed900b00          VLDR     d0,[r0,#0]            ;280
0007c6  ec532b10          VMOV     r2,r3,d0              ;280
0007ca  4826              LDR      r0,|L1.2148|
0007cc  ed900b00          VLDR     d0,[r0,#0]            ;280
0007d0  ec510b10          VMOV     r0,r1,d0              ;280
0007d4  f7fffffe          BL       __aeabi_cdcmple
0007d8  d9e1              BLS      |L1.1950|
                  |L1.2010|
0007da  bf00              NOP      
;;;286    		}
;;;287    		}	
;;;288    		i=0;
0007dc  2000              MOVS     r0,#0
0007de  4922              LDR      r1,|L1.2152|
0007e0  6008              STR      r0,[r1,#0]  ; i
;;;289    	calspeed23 = tempspeed;
0007e2  4820              LDR      r0,|L1.2148|
0007e4  ed900b00          VLDR     d0,[r0,#0]
0007e8  482b              LDR      r0,|L1.2200|
0007ea  ed800b00          VSTR     d0,[r0,#0]
;;;290    	
;;;291    	while(tempspeed <= calspeed23){
0007ee  e010              B        |L1.2066|
                  |L1.2032|
;;;292    	tempspeed = ReadEncoder();
0007f0  f7fffffe          BL       ReadEncoder
0007f4  481b              LDR      r0,|L1.2148|
0007f6  ed800b00          VSTR     d0,[r0,#0]
;;;293    		i++;
0007fa  481b              LDR      r0,|L1.2152|
0007fc  6800              LDR      r0,[r0,#0]  ; i
0007fe  1c40              ADDS     r0,r0,#1
000800  4919              LDR      r1,|L1.2152|
000802  6008              STR      r0,[r1,#0]  ; i
;;;294    		if (i > 9999)
000804  4608              MOV      r0,r1
000806  6800              LDR      r0,[r0,#0]  ; i
000808  f242710f          MOV      r1,#0x270f
00080c  4288              CMP      r0,r1
00080e  dd00              BLE      |L1.2066|
;;;295    		{
;;;296    			break;
000810  e00c              B        |L1.2092|
                  |L1.2066|
000812  4821              LDR      r0,|L1.2200|
000814  ed900b00          VLDR     d0,[r0,#0]            ;291
000818  ec532b10          VMOV     r2,r3,d0              ;291
00081c  4811              LDR      r0,|L1.2148|
00081e  ed900b00          VLDR     d0,[r0,#0]            ;291
000822  ec510b10          VMOV     r0,r1,d0              ;291
000826  f7fffffe          BL       __aeabi_cdcmple
00082a  d9e1              BLS      |L1.2032|
                  |L1.2092|
00082c  bf00              NOP      
;;;297    		}
;;;298    		}	
;;;299    		i=0;
00082e  2000              MOVS     r0,#0
000830  490d              LDR      r1,|L1.2152|
000832  6008              STR      r0,[r1,#0]  ; i
;;;300    	calspeed24 = tempspeed;
000834  480b              LDR      r0,|L1.2148|
000836  ed900b00          VLDR     d0,[r0,#0]
00083a  4818              LDR      r0,|L1.2204|
00083c  ed800b00          VSTR     d0,[r0,#0]
;;;301    	
;;;302    	while(tempspeed <= calspeed24){
000840  e02e              B        |L1.2208|
                  |L1.2114|
;;;303    	tempspeed = ReadEncoder();
000842  f7fffffe          BL       ReadEncoder
000846  4807              LDR      r0,|L1.2148|
000848  ed800b00          VSTR     d0,[r0,#0]
;;;304    		i++;
00084c  4806              LDR      r0,|L1.2152|
00084e  6800              LDR      r0,[r0,#0]  ; i
000850  1c40              ADDS     r0,r0,#1
000852  4905              LDR      r1,|L1.2152|
000854  6008              STR      r0,[r1,#0]  ; i
;;;305    		if (i > 9999)
000856  4608              MOV      r0,r1
000858  6800              LDR      r0,[r0,#0]  ; i
00085a  f242710f          MOV      r1,#0x270f
00085e  4288              CMP      r0,r1
000860  dd1e              BLE      |L1.2208|
;;;306    		{
;;;307    			break;
000862  e02a              B        |L1.2234|
                  |L1.2148|
                          DCD      tempspeed
                  |L1.2152|
                          DCD      i
                  |L1.2156|
                          DCD      calspeed12
                  |L1.2160|
                          DCD      calspeed13
                  |L1.2164|
                          DCD      calspeed14
                  |L1.2168|
                          DCD      calspeed15
                  |L1.2172|
                          DCD      calspeed16
                  |L1.2176|
                          DCD      calspeed17
                  |L1.2180|
                          DCD      calspeed18
                  |L1.2184|
                          DCD      calspeed19
                  |L1.2188|
                          DCD      calspeed20
                  |L1.2192|
                          DCD      calspeed21
                  |L1.2196|
                          DCD      calspeed22
                  |L1.2200|
                          DCD      calspeed23
                  |L1.2204|
                          DCD      calspeed24
                  |L1.2208|
0008a0  48e2              LDR      r0,|L1.3116|
0008a2  ed900b00          VLDR     d0,[r0,#0]            ;302
0008a6  ec532b10          VMOV     r2,r3,d0              ;302
0008aa  48e1              LDR      r0,|L1.3120|
0008ac  ed900b00          VLDR     d0,[r0,#0]            ;302
0008b0  ec510b10          VMOV     r0,r1,d0              ;302
0008b4  f7fffffe          BL       __aeabi_cdcmple
0008b8  d9c3              BLS      |L1.2114|
                  |L1.2234|
0008ba  bf00              NOP      
;;;308    		}
;;;309    		}	
;;;310    		i=0;
0008bc  2000              MOVS     r0,#0
0008be  49dd              LDR      r1,|L1.3124|
0008c0  6008              STR      r0,[r1,#0]  ; i
;;;311    	calspeed25 = tempspeed;
0008c2  48db              LDR      r0,|L1.3120|
0008c4  ed900b00          VLDR     d0,[r0,#0]
0008c8  48db              LDR      r0,|L1.3128|
0008ca  ed800b00          VSTR     d0,[r0,#0]
;;;312    	
;;;313    	while(tempspeed <= calspeed25){
0008ce  e010              B        |L1.2290|
                  |L1.2256|
;;;314    	tempspeed = ReadEncoder();
0008d0  f7fffffe          BL       ReadEncoder
0008d4  48d6              LDR      r0,|L1.3120|
0008d6  ed800b00          VSTR     d0,[r0,#0]
;;;315    		i++;
0008da  48d6              LDR      r0,|L1.3124|
0008dc  6800              LDR      r0,[r0,#0]  ; i
0008de  1c40              ADDS     r0,r0,#1
0008e0  49d4              LDR      r1,|L1.3124|
0008e2  6008              STR      r0,[r1,#0]  ; i
;;;316    		if (i > 9999)
0008e4  4608              MOV      r0,r1
0008e6  6800              LDR      r0,[r0,#0]  ; i
0008e8  f242710f          MOV      r1,#0x270f
0008ec  4288              CMP      r0,r1
0008ee  dd00              BLE      |L1.2290|
;;;317    		{
;;;318    			break;
0008f0  e00c              B        |L1.2316|
                  |L1.2290|
0008f2  48d1              LDR      r0,|L1.3128|
0008f4  ed900b00          VLDR     d0,[r0,#0]            ;313
0008f8  ec532b10          VMOV     r2,r3,d0              ;313
0008fc  48cc              LDR      r0,|L1.3120|
0008fe  ed900b00          VLDR     d0,[r0,#0]            ;313
000902  ec510b10          VMOV     r0,r1,d0              ;313
000906  f7fffffe          BL       __aeabi_cdcmple
00090a  d9e1              BLS      |L1.2256|
                  |L1.2316|
00090c  bf00              NOP      
;;;319    		}
;;;320    		}	
;;;321    	
;;;322    	//prints saved speeds 
;;;323    	printf("Speed 0  = %.2f  ", calspeed0);		
00090e  48cb              LDR      r0,|L1.3132|
000910  ed900b00          VLDR     d0,[r0,#0]
000914  ec532b10          VMOV     r2,r3,d0
000918  a0c9              ADR      r0,|L1.3136|
00091a  f7fffffe          BL       __2printf
;;;324    	printf("Speed 1  = %.2f  ", calspeed1);
00091e  48cd              LDR      r0,|L1.3156|
000920  ed900b00          VLDR     d0,[r0,#0]
000924  ec532b10          VMOV     r2,r3,d0
000928  a0cb              ADR      r0,|L1.3160|
00092a  f7fffffe          BL       __2printf
;;;325    	printf("Speed 2  = %.2f  ", calspeed2);
00092e  48cf              LDR      r0,|L1.3180|
000930  ed900b00          VLDR     d0,[r0,#0]
000934  ec532b10          VMOV     r2,r3,d0
000938  a0cd              ADR      r0,|L1.3184|
00093a  f7fffffe          BL       __2printf
;;;326    	printf("Speed 3  = %.2f\n", calspeed3);
00093e  48d1              LDR      r0,|L1.3204|
000940  ed900b00          VLDR     d0,[r0,#0]
000944  ec532b10          VMOV     r2,r3,d0
000948  a0cf              ADR      r0,|L1.3208|
00094a  f7fffffe          BL       __2printf
;;;327    	printf("Speed 4  = %.2f ", calspeed4);
00094e  48d3              LDR      r0,|L1.3228|
000950  ed900b00          VLDR     d0,[r0,#0]
000954  ec532b10          VMOV     r2,r3,d0
000958  a0d1              ADR      r0,|L1.3232|
00095a  f7fffffe          BL       __2printf
;;;328    	printf("Speed 5  = %.2f ", calspeed5);
00095e  48d5              LDR      r0,|L1.3252|
000960  ed900b00          VLDR     d0,[r0,#0]
000964  ec532b10          VMOV     r2,r3,d0
000968  a0d3              ADR      r0,|L1.3256|
00096a  f7fffffe          BL       __2printf
;;;329    	printf("Speed 6  = %.2f ", calspeed6);
00096e  48d7              LDR      r0,|L1.3276|
000970  ed900b00          VLDR     d0,[r0,#0]
000974  ec532b10          VMOV     r2,r3,d0
000978  a0d5              ADR      r0,|L1.3280|
00097a  f7fffffe          BL       __2printf
;;;330    	printf("Speed 7  = %.2f\n", calspeed7);
00097e  48d9              LDR      r0,|L1.3300|
000980  ed900b00          VLDR     d0,[r0,#0]
000984  ec532b10          VMOV     r2,r3,d0
000988  a0d7              ADR      r0,|L1.3304|
00098a  f7fffffe          BL       __2printf
;;;331    	printf("Speed 8  = %.2f ", calspeed8);
00098e  48db              LDR      r0,|L1.3324|
000990  ed900b00          VLDR     d0,[r0,#0]
000994  ec532b10          VMOV     r2,r3,d0
000998  a0d9              ADR      r0,|L1.3328|
00099a  f7fffffe          BL       __2printf
;;;332    	printf("Speed 9  = %.2f ", calspeed9);
00099e  48dd              LDR      r0,|L1.3348|
0009a0  ed900b00          VLDR     d0,[r0,#0]
0009a4  ec532b10          VMOV     r2,r3,d0
0009a8  a0db              ADR      r0,|L1.3352|
0009aa  f7fffffe          BL       __2printf
;;;333    	printf("Speed 10 = %.2f ", calspeed10);
0009ae  48df              LDR      r0,|L1.3372|
0009b0  ed900b00          VLDR     d0,[r0,#0]
0009b4  ec532b10          VMOV     r2,r3,d0
0009b8  a0dd              ADR      r0,|L1.3376|
0009ba  f7fffffe          BL       __2printf
;;;334    	printf("Speed 11 = %.2f\n", calspeed11);
0009be  48e1              LDR      r0,|L1.3396|
0009c0  ed900b00          VLDR     d0,[r0,#0]
0009c4  ec532b10          VMOV     r2,r3,d0
0009c8  a0df              ADR      r0,|L1.3400|
0009ca  f7fffffe          BL       __2printf
;;;335    	printf("Speed 12 = %.2f ", calspeed12);
0009ce  48e3              LDR      r0,|L1.3420|
0009d0  ed900b00          VLDR     d0,[r0,#0]
0009d4  ec532b10          VMOV     r2,r3,d0
0009d8  a0e1              ADR      r0,|L1.3424|
0009da  f7fffffe          BL       __2printf
;;;336    	printf("Speed 13 = %.2f ", calspeed13);
0009de  48e5              LDR      r0,|L1.3444|
0009e0  ed900b00          VLDR     d0,[r0,#0]
0009e4  ec532b10          VMOV     r2,r3,d0
0009e8  a0e3              ADR      r0,|L1.3448|
0009ea  f7fffffe          BL       __2printf
;;;337    	printf("Speed 14 = %.2f ", calspeed14);
0009ee  48e7              LDR      r0,|L1.3468|
0009f0  ed900b00          VLDR     d0,[r0,#0]
0009f4  ec532b10          VMOV     r2,r3,d0
0009f8  a0e5              ADR      r0,|L1.3472|
0009fa  f7fffffe          BL       __2printf
;;;338    	printf("Speed 15 = %.2f\n", calspeed15);
0009fe  48e9              LDR      r0,|L1.3492|
000a00  ed900b00          VLDR     d0,[r0,#0]
000a04  ec532b10          VMOV     r2,r3,d0
000a08  a0e7              ADR      r0,|L1.3496|
000a0a  f7fffffe          BL       __2printf
;;;339    	printf("Speed 16 = %.2f ", calspeed16);
000a0e  48eb              LDR      r0,|L1.3516|
000a10  ed900b00          VLDR     d0,[r0,#0]
000a14  ec532b10          VMOV     r2,r3,d0
000a18  a0e9              ADR      r0,|L1.3520|
000a1a  f7fffffe          BL       __2printf
;;;340    	printf("Speed 17 = %.2f ", calspeed17);
000a1e  48ed              LDR      r0,|L1.3540|
000a20  ed900b00          VLDR     d0,[r0,#0]
000a24  ec532b10          VMOV     r2,r3,d0
000a28  a0eb              ADR      r0,|L1.3544|
000a2a  f7fffffe          BL       __2printf
;;;341    	printf("Speed 18 = %.2f ", calspeed18);
000a2e  48ef              LDR      r0,|L1.3564|
000a30  ed900b00          VLDR     d0,[r0,#0]
000a34  ec532b10          VMOV     r2,r3,d0
000a38  a0ed              ADR      r0,|L1.3568|
000a3a  f7fffffe          BL       __2printf
;;;342    	printf("Speed 19 = %.2f\n", calspeed19);
000a3e  48f1              LDR      r0,|L1.3588|
000a40  ed900b00          VLDR     d0,[r0,#0]
000a44  ec532b10          VMOV     r2,r3,d0
000a48  a0ef              ADR      r0,|L1.3592|
000a4a  f7fffffe          BL       __2printf
;;;343    	printf("Speed 20 = %.2f ", calspeed20);
000a4e  48f3              LDR      r0,|L1.3612|
000a50  ed900b00          VLDR     d0,[r0,#0]
000a54  ec532b10          VMOV     r2,r3,d0
000a58  a0f1              ADR      r0,|L1.3616|
000a5a  f7fffffe          BL       __2printf
;;;344    	printf("Speed 21 = %.2f ", calspeed21);
000a5e  48f5              LDR      r0,|L1.3636|
000a60  ed900b00          VLDR     d0,[r0,#0]
000a64  ec532b10          VMOV     r2,r3,d0
000a68  a0f3              ADR      r0,|L1.3640|
000a6a  f7fffffe          BL       __2printf
;;;345    	printf("Speed 22 = %.2f ", calspeed22);
000a6e  48f7              LDR      r0,|L1.3660|
000a70  ed900b00          VLDR     d0,[r0,#0]
000a74  ec532b10          VMOV     r2,r3,d0
000a78  a0f5              ADR      r0,|L1.3664|
000a7a  f7fffffe          BL       __2printf
;;;346    	printf("Speed 23 = %.2f\n", calspeed20);
000a7e  48e7              LDR      r0,|L1.3612|
000a80  ed900b00          VLDR     d0,[r0,#0]
000a84  ec532b10          VMOV     r2,r3,d0
000a88  a0f6              ADR      r0,|L1.3684|
000a8a  f7fffffe          BL       __2printf
;;;347    	printf("Speed 24 = %.2f ", calspeed21);
000a8e  48e9              LDR      r0,|L1.3636|
000a90  ed900b00          VLDR     d0,[r0,#0]
000a94  ec532b10          VMOV     r2,r3,d0
000a98  a0f7              ADR      r0,|L1.3704|
000a9a  f7fffffe          BL       __2printf
;;;348    	printf("Speed 25 = %.2f\n ", calspeed22);
000a9e  48eb              LDR      r0,|L1.3660|
000aa0  ed900b00          VLDR     d0,[r0,#0]
000aa4  ec532b10          VMOV     r2,r3,d0
000aa8  a0f8              ADR      r0,|L1.3724|
000aaa  f7fffffe          BL       __2printf
;;;349    	
;;;350    	//reads voltage supplied to motor
;;;351    	voltage = ADCReadChan();
000aae  f7fffffe          BL       ADCReadChan
000ab2  48fb              LDR      r0,|L1.3744|
000ab4  ed800b00          VSTR     d0,[r0,#0]
;;;352    	//sets pwm to 0%
;;;353    	PWMPulseWidthSet(PWM1_BASE, PWM_OUT_6, 0);
000ab8  2200              MOVS     r2,#0
000aba  f44f7183          MOV      r1,#0x106
000abe  48f9              LDR      r0,|L1.3748|
000ac0  f7fffffe          BL       PWMPulseWidthSet
;;;354    	
;;;355    			
;;;356    	k = calspeed25 / voltage;
000ac4  48f6              LDR      r0,|L1.3744|
000ac6  ed900b00          VLDR     d0,[r0,#0]
000aca  ec532b10          VMOV     r2,r3,d0
000ace  485a              LDR      r0,|L1.3128|
000ad0  ed900b00          VLDR     d0,[r0,#0]
000ad4  ec510b10          VMOV     r0,r1,d0
000ad8  f7fffffe          BL       __aeabi_ddiv
000adc  4af2              LDR      r2,|L1.3752|
000ade  c203              STM      r2!,{r0,r1}
;;;357    	AvK = calspeed17 * .6321;
000ae0  ed9f0bf2          VLDR     d0,|L1.3756|
000ae4  ec532b10          VMOV     r2,r3,d0
000ae8  48ba              LDR      r0,|L1.3540|
000aea  ed900b00          VLDR     d0,[r0,#0]
000aee  ec510b10          VMOV     r0,r1,d0
000af2  f7fffffe          BL       __aeabi_dmul
000af6  4aef              LDR      r2,|L1.3764|
000af8  c203              STM      r2!,{r0,r1}
;;;358    
;;;359    	if (AvK < calspeed2){
000afa  485c              LDR      r0,|L1.3180|
000afc  ed900b00          VLDR     d0,[r0,#0]
000b00  ec532b10          VMOV     r2,r3,d0
000b04  48eb              LDR      r0,|L1.3764|
000b06  ed900b00          VLDR     d0,[r0,#0]
000b0a  ec510b10          VMOV     r0,r1,d0
000b0e  f7fffffe          BL       __aeabi_cdcmple
000b12  d205              BCS      |L1.2848|
;;;360    		t = .02;
000b14  ed9f0be8          VLDR     d0,|L1.3768|
000b18  48e9              LDR      r0,|L1.3776|
000b1a  ed800b00          VSTR     d0,[r0,#0]
000b1e  e284              B        |L1.4138|
                  |L1.2848|
;;;361    	}
;;;362    	else if (AvK < calspeed3){
000b20  4858              LDR      r0,|L1.3204|
000b22  ed900b00          VLDR     d0,[r0,#0]
000b26  ec532b10          VMOV     r2,r3,d0
000b2a  48e2              LDR      r0,|L1.3764|
000b2c  ed900b00          VLDR     d0,[r0,#0]
000b30  ec510b10          VMOV     r0,r1,d0
000b34  f7fffffe          BL       __aeabi_cdcmple
000b38  d205              BCS      |L1.2886|
;;;363    		t = .03;
000b3a  ed9f0be2          VLDR     d0,|L1.3780|
000b3e  48e0              LDR      r0,|L1.3776|
000b40  ed800b00          VSTR     d0,[r0,#0]
000b44  e271              B        |L1.4138|
                  |L1.2886|
;;;364    	}
;;;365    	else if (AvK < calspeed4){
000b46  4855              LDR      r0,|L1.3228|
000b48  ed900b00          VLDR     d0,[r0,#0]
000b4c  ec532b10          VMOV     r2,r3,d0
000b50  48d8              LDR      r0,|L1.3764|
000b52  ed900b00          VLDR     d0,[r0,#0]
000b56  ec510b10          VMOV     r0,r1,d0
000b5a  f7fffffe          BL       __aeabi_cdcmple
000b5e  d205              BCS      |L1.2924|
;;;366    		t = .04;
000b60  ed9f0bda          VLDR     d0,|L1.3788|
000b64  48d6              LDR      r0,|L1.3776|
000b66  ed800b00          VSTR     d0,[r0,#0]
000b6a  e25e              B        |L1.4138|
                  |L1.2924|
;;;367    	}
;;;368    	else if (AvK < calspeed5){
000b6c  4851              LDR      r0,|L1.3252|
000b6e  ed900b00          VLDR     d0,[r0,#0]
000b72  ec532b10          VMOV     r2,r3,d0
000b76  48cf              LDR      r0,|L1.3764|
000b78  ed900b00          VLDR     d0,[r0,#0]
000b7c  ec510b10          VMOV     r0,r1,d0
000b80  f7fffffe          BL       __aeabi_cdcmple
000b84  d205              BCS      |L1.2962|
;;;369    		t = .05;
000b86  ed9f0bd3          VLDR     d0,|L1.3796|
000b8a  48cd              LDR      r0,|L1.3776|
000b8c  ed800b00          VSTR     d0,[r0,#0]
000b90  e24b              B        |L1.4138|
                  |L1.2962|
;;;370    	}
;;;371    	else if (AvK < calspeed6){
000b92  484e              LDR      r0,|L1.3276|
000b94  ed900b00          VLDR     d0,[r0,#0]
000b98  ec532b10          VMOV     r2,r3,d0
000b9c  48c5              LDR      r0,|L1.3764|
000b9e  ed900b00          VLDR     d0,[r0,#0]
000ba2  ec510b10          VMOV     r0,r1,d0
000ba6  f7fffffe          BL       __aeabi_cdcmple
000baa  d205              BCS      |L1.3000|
;;;372    		t = .06;
000bac  ed9f0bcb          VLDR     d0,|L1.3804|
000bb0  48c3              LDR      r0,|L1.3776|
000bb2  ed800b00          VSTR     d0,[r0,#0]
000bb6  e238              B        |L1.4138|
                  |L1.3000|
;;;373    	}
;;;374    	else if (AvK < calspeed7){
000bb8  484a              LDR      r0,|L1.3300|
000bba  ed900b00          VLDR     d0,[r0,#0]
000bbe  ec532b10          VMOV     r2,r3,d0
000bc2  48bc              LDR      r0,|L1.3764|
000bc4  ed900b00          VLDR     d0,[r0,#0]
000bc8  ec510b10          VMOV     r0,r1,d0
000bcc  f7fffffe          BL       __aeabi_cdcmple
000bd0  d205              BCS      |L1.3038|
;;;375    		t = .07;
000bd2  ed9f0bc4          VLDR     d0,|L1.3812|
000bd6  48ba              LDR      r0,|L1.3776|
000bd8  ed800b00          VSTR     d0,[r0,#0]
000bdc  e225              B        |L1.4138|
                  |L1.3038|
;;;376    	}
;;;377    	else if (AvK < calspeed8){
000bde  4847              LDR      r0,|L1.3324|
000be0  ed900b00          VLDR     d0,[r0,#0]
000be4  ec532b10          VMOV     r2,r3,d0
000be8  48b2              LDR      r0,|L1.3764|
000bea  ed900b00          VLDR     d0,[r0,#0]
000bee  ec510b10          VMOV     r0,r1,d0
000bf2  f7fffffe          BL       __aeabi_cdcmple
000bf6  d205              BCS      |L1.3076|
;;;378    		t = .08;
000bf8  ed9f0bbc          VLDR     d0,|L1.3820|
000bfc  48b0              LDR      r0,|L1.3776|
000bfe  ed800b00          VSTR     d0,[r0,#0]
000c02  e212              B        |L1.4138|
                  |L1.3076|
;;;379    	}
;;;380    	else if (AvK < calspeed9){
000c04  4843              LDR      r0,|L1.3348|
000c06  ed900b00          VLDR     d0,[r0,#0]
000c0a  ec532b10          VMOV     r2,r3,d0
000c0e  48a9              LDR      r0,|L1.3764|
000c10  ed900b00          VLDR     d0,[r0,#0]
000c14  ec510b10          VMOV     r0,r1,d0
000c18  f7fffffe          BL       __aeabi_cdcmple
000c1c  d205              BCS      |L1.3114|
;;;381    		t = .09;
000c1e  ed9f0bb5          VLDR     d0,|L1.3828|
000c22  48a7              LDR      r0,|L1.3776|
000c24  ed800b00          VSTR     d0,[r0,#0]
000c28  e1ff              B        |L1.4138|
                  |L1.3114|
000c2a  e167              B        |L1.3836|
                  |L1.3116|
                          DCD      calspeed24
                  |L1.3120|
                          DCD      tempspeed
                  |L1.3124|
                          DCD      i
                  |L1.3128|
                          DCD      calspeed25
                  |L1.3132|
                          DCD      calspeed0
                  |L1.3136|
000c40  53706565          DCB      "Speed 0  = %.2f  ",0
000c44  64203020
000c48  203d2025
000c4c  2e326620
000c50  2000    
000c52  00                DCB      0
000c53  00                DCB      0
                  |L1.3156|
                          DCD      calspeed1
                  |L1.3160|
000c58  53706565          DCB      "Speed 1  = %.2f  ",0
000c5c  64203120
000c60  203d2025
000c64  2e326620
000c68  2000    
000c6a  00                DCB      0
000c6b  00                DCB      0
                  |L1.3180|
                          DCD      calspeed2
                  |L1.3184|
000c70  53706565          DCB      "Speed 2  = %.2f  ",0
000c74  64203220
000c78  203d2025
000c7c  2e326620
000c80  2000    
000c82  00                DCB      0
000c83  00                DCB      0
                  |L1.3204|
                          DCD      calspeed3
                  |L1.3208|
000c88  53706565          DCB      "Speed 3  = %.2f\n",0
000c8c  64203320
000c90  203d2025
000c94  2e32660a
000c98  00      
000c99  00                DCB      0
000c9a  00                DCB      0
000c9b  00                DCB      0
                  |L1.3228|
                          DCD      calspeed4
                  |L1.3232|
000ca0  53706565          DCB      "Speed 4  = %.2f ",0
000ca4  64203420
000ca8  203d2025
000cac  2e326620
000cb0  00      
000cb1  00                DCB      0
000cb2  00                DCB      0
000cb3  00                DCB      0
                  |L1.3252|
                          DCD      calspeed5
                  |L1.3256|
000cb8  53706565          DCB      "Speed 5  = %.2f ",0
000cbc  64203520
000cc0  203d2025
000cc4  2e326620
000cc8  00      
000cc9  00                DCB      0
000cca  00                DCB      0
000ccb  00                DCB      0
                  |L1.3276|
                          DCD      calspeed6
                  |L1.3280|
000cd0  53706565          DCB      "Speed 6  = %.2f ",0
000cd4  64203620
000cd8  203d2025
000cdc  2e326620
000ce0  00      
000ce1  00                DCB      0
000ce2  00                DCB      0
000ce3  00                DCB      0
                  |L1.3300|
                          DCD      calspeed7
                  |L1.3304|
000ce8  53706565          DCB      "Speed 7  = %.2f\n",0
000cec  64203720
000cf0  203d2025
000cf4  2e32660a
000cf8  00      
000cf9  00                DCB      0
000cfa  00                DCB      0
000cfb  00                DCB      0
                  |L1.3324|
                          DCD      calspeed8
                  |L1.3328|
000d00  53706565          DCB      "Speed 8  = %.2f ",0
000d04  64203820
000d08  203d2025
000d0c  2e326620
000d10  00      
000d11  00                DCB      0
000d12  00                DCB      0
000d13  00                DCB      0
                  |L1.3348|
                          DCD      calspeed9
                  |L1.3352|
000d18  53706565          DCB      "Speed 9  = %.2f ",0
000d1c  64203920
000d20  203d2025
000d24  2e326620
000d28  00      
000d29  00                DCB      0
000d2a  00                DCB      0
000d2b  00                DCB      0
                  |L1.3372|
                          DCD      calspeed10
                  |L1.3376|
000d30  53706565          DCB      "Speed 10 = %.2f ",0
000d34  64203130
000d38  203d2025
000d3c  2e326620
000d40  00      
000d41  00                DCB      0
000d42  00                DCB      0
000d43  00                DCB      0
                  |L1.3396|
                          DCD      calspeed11
                  |L1.3400|
000d48  53706565          DCB      "Speed 11 = %.2f\n",0
000d4c  64203131
000d50  203d2025
000d54  2e32660a
000d58  00      
000d59  00                DCB      0
000d5a  00                DCB      0
000d5b  00                DCB      0
                  |L1.3420|
                          DCD      calspeed12
                  |L1.3424|
000d60  53706565          DCB      "Speed 12 = %.2f ",0
000d64  64203132
000d68  203d2025
000d6c  2e326620
000d70  00      
000d71  00                DCB      0
000d72  00                DCB      0
000d73  00                DCB      0
                  |L1.3444|
                          DCD      calspeed13
                  |L1.3448|
000d78  53706565          DCB      "Speed 13 = %.2f ",0
000d7c  64203133
000d80  203d2025
000d84  2e326620
000d88  00      
000d89  00                DCB      0
000d8a  00                DCB      0
000d8b  00                DCB      0
                  |L1.3468|
                          DCD      calspeed14
                  |L1.3472|
000d90  53706565          DCB      "Speed 14 = %.2f ",0
000d94  64203134
000d98  203d2025
000d9c  2e326620
000da0  00      
000da1  00                DCB      0
000da2  00                DCB      0
000da3  00                DCB      0
                  |L1.3492|
                          DCD      calspeed15
                  |L1.3496|
000da8  53706565          DCB      "Speed 15 = %.2f\n",0
000dac  64203135
000db0  203d2025
000db4  2e32660a
000db8  00      
000db9  00                DCB      0
000dba  00                DCB      0
000dbb  00                DCB      0
                  |L1.3516|
                          DCD      calspeed16
                  |L1.3520|
000dc0  53706565          DCB      "Speed 16 = %.2f ",0
000dc4  64203136
000dc8  203d2025
000dcc  2e326620
000dd0  00      
000dd1  00                DCB      0
000dd2  00                DCB      0
000dd3  00                DCB      0
                  |L1.3540|
                          DCD      calspeed17
                  |L1.3544|
000dd8  53706565          DCB      "Speed 17 = %.2f ",0
000ddc  64203137
000de0  203d2025
000de4  2e326620
000de8  00      
000de9  00                DCB      0
000dea  00                DCB      0
000deb  00                DCB      0
                  |L1.3564|
                          DCD      calspeed18
                  |L1.3568|
000df0  53706565          DCB      "Speed 18 = %.2f ",0
000df4  64203138
000df8  203d2025
000dfc  2e326620
000e00  00      
000e01  00                DCB      0
000e02  00                DCB      0
000e03  00                DCB      0
                  |L1.3588|
                          DCD      calspeed19
                  |L1.3592|
000e08  53706565          DCB      "Speed 19 = %.2f\n",0
000e0c  64203139
000e10  203d2025
000e14  2e32660a
000e18  00      
000e19  00                DCB      0
000e1a  00                DCB      0
000e1b  00                DCB      0
                  |L1.3612|
                          DCD      calspeed20
                  |L1.3616|
000e20  53706565          DCB      "Speed 20 = %.2f ",0
000e24  64203230
000e28  203d2025
000e2c  2e326620
000e30  00      
000e31  00                DCB      0
000e32  00                DCB      0
000e33  00                DCB      0
                  |L1.3636|
                          DCD      calspeed21
                  |L1.3640|
000e38  53706565          DCB      "Speed 21 = %.2f ",0
000e3c  64203231
000e40  203d2025
000e44  2e326620
000e48  00      
000e49  00                DCB      0
000e4a  00                DCB      0
000e4b  00                DCB      0
                  |L1.3660|
                          DCD      calspeed22
                  |L1.3664|
000e50  53706565          DCB      "Speed 22 = %.2f ",0
000e54  64203232
000e58  203d2025
000e5c  2e326620
000e60  00      
000e61  00                DCB      0
000e62  00                DCB      0
000e63  00                DCB      0
                  |L1.3684|
000e64  53706565          DCB      "Speed 23 = %.2f\n",0
000e68  64203233
000e6c  203d2025
000e70  2e32660a
000e74  00      
000e75  00                DCB      0
000e76  00                DCB      0
000e77  00                DCB      0
                  |L1.3704|
000e78  53706565          DCB      "Speed 24 = %.2f ",0
000e7c  64203234
000e80  203d2025
000e84  2e326620
000e88  00      
000e89  00                DCB      0
000e8a  00                DCB      0
000e8b  00                DCB      0
                  |L1.3724|
000e8c  53706565          DCB      "Speed 25 = %.2f\n ",0
000e90  64203235
000e94  203d2025
000e98  2e32660a
000e9c  2000    
000e9e  00                DCB      0
000e9f  00                DCB      0
                  |L1.3744|
                          DCD      voltage
                  |L1.3748|
                          DCD      0x40029000
                  |L1.3752|
                          DCD      k
                  |L1.3756|
000eac  c779a6b5          DCFD     0x3fe43a29c779a6b5 ; 0.6321
000eb0  3fe43a29
                  |L1.3764|
                          DCD      AvK
                  |L1.3768|
000eb8  47ae147b          DCFD     0x3f947ae147ae147b ; 0.02
000ebc  3f947ae1
                  |L1.3776|
                          DCD      t
                  |L1.3780|
000ec4  eb851eb8          DCFD     0x3f9eb851eb851eb8 ; 0.029999999999999999
000ec8  3f9eb851
                  |L1.3788|
000ecc  47ae147b          DCFD     0x3fa47ae147ae147b ; 0.040000000000000001
000ed0  3fa47ae1
                  |L1.3796|
000ed4  9999999a          DCFD     0x3fa999999999999a ; 0.050000000000000003
000ed8  3fa99999
                  |L1.3804|
000edc  eb851eb8          DCFD     0x3faeb851eb851eb8 ; 0.059999999999999998
000ee0  3faeb851
                  |L1.3812|
000ee4  1eb851ec          DCFD     0x3fb1eb851eb851ec ; 0.070000000000000007
000ee8  3fb1eb85
                  |L1.3820|
000eec  47ae147b          DCFD     0x3fb47ae147ae147b ; 0.080000000000000002
000ef0  3fb47ae1
                  |L1.3828|
000ef4  70a3d70a          DCFD     0x3fb70a3d70a3d70a ; 0.089999999999999997
000ef8  3fb70a3d
                  |L1.3836|
;;;382    	}
;;;383    	else if (AvK < calspeed10){
000efc  4863              LDR      r0,|L1.4236|
000efe  ed900b00          VLDR     d0,[r0,#0]
000f02  ec532b10          VMOV     r2,r3,d0
000f06  4862              LDR      r0,|L1.4240|
000f08  ed900b00          VLDR     d0,[r0,#0]
000f0c  ec510b10          VMOV     r0,r1,d0
000f10  f7fffffe          BL       __aeabi_cdcmple
000f14  d205              BCS      |L1.3874|
;;;384    		t = .10;
000f16  ed9f0b5f          VLDR     d0,|L1.4244|
000f1a  4860              LDR      r0,|L1.4252|
000f1c  ed800b00          VSTR     d0,[r0,#0]
000f20  e083              B        |L1.4138|
                  |L1.3874|
;;;385    	}
;;;386    	else if (AvK < calspeed11){
000f22  485f              LDR      r0,|L1.4256|
000f24  ed900b00          VLDR     d0,[r0,#0]
000f28  ec532b10          VMOV     r2,r3,d0
000f2c  4858              LDR      r0,|L1.4240|
000f2e  ed900b00          VLDR     d0,[r0,#0]
000f32  ec510b10          VMOV     r0,r1,d0
000f36  f7fffffe          BL       __aeabi_cdcmple
000f3a  d205              BCS      |L1.3912|
;;;387    		t = .11;
000f3c  ed9f0b59          VLDR     d0,|L1.4260|
000f40  4856              LDR      r0,|L1.4252|
000f42  ed800b00          VSTR     d0,[r0,#0]
000f46  e070              B        |L1.4138|
                  |L1.3912|
;;;388    	}
;;;389    	else if (AvK < calspeed12){
000f48  4858              LDR      r0,|L1.4268|
000f4a  ed900b00          VLDR     d0,[r0,#0]
000f4e  ec532b10          VMOV     r2,r3,d0
000f52  484f              LDR      r0,|L1.4240|
000f54  ed900b00          VLDR     d0,[r0,#0]
000f58  ec510b10          VMOV     r0,r1,d0
000f5c  f7fffffe          BL       __aeabi_cdcmple
000f60  d205              BCS      |L1.3950|
;;;390    		t = .12;
000f62  ed9f0b53          VLDR     d0,|L1.4272|
000f66  484d              LDR      r0,|L1.4252|
000f68  ed800b00          VSTR     d0,[r0,#0]
000f6c  e05d              B        |L1.4138|
                  |L1.3950|
;;;391    	}
;;;392    	else if (AvK < calspeed13){
000f6e  4852              LDR      r0,|L1.4280|
000f70  ed900b00          VLDR     d0,[r0,#0]
000f74  ec532b10          VMOV     r2,r3,d0
000f78  4845              LDR      r0,|L1.4240|
000f7a  ed900b00          VLDR     d0,[r0,#0]
000f7e  ec510b10          VMOV     r0,r1,d0
000f82  f7fffffe          BL       __aeabi_cdcmple
000f86  d205              BCS      |L1.3988|
;;;393    		t = .13;
000f88  ed9f0b4c          VLDR     d0,|L1.4284|
000f8c  4843              LDR      r0,|L1.4252|
000f8e  ed800b00          VSTR     d0,[r0,#0]
000f92  e04a              B        |L1.4138|
                  |L1.3988|
;;;394    	}
;;;395    	else if (AvK < calspeed14){
000f94  484b              LDR      r0,|L1.4292|
000f96  ed900b00          VLDR     d0,[r0,#0]
000f9a  ec532b10          VMOV     r2,r3,d0
000f9e  483c              LDR      r0,|L1.4240|
000fa0  ed900b00          VLDR     d0,[r0,#0]
000fa4  ec510b10          VMOV     r0,r1,d0
000fa8  f7fffffe          BL       __aeabi_cdcmple
000fac  d205              BCS      |L1.4026|
;;;396    		t = .14;
000fae  ed9f0b46          VLDR     d0,|L1.4296|
000fb2  483a              LDR      r0,|L1.4252|
000fb4  ed800b00          VSTR     d0,[r0,#0]
000fb8  e037              B        |L1.4138|
                  |L1.4026|
;;;397    	}
;;;398    	else if (AvK < calspeed15){
000fba  4845              LDR      r0,|L1.4304|
000fbc  ed900b00          VLDR     d0,[r0,#0]
000fc0  ec532b10          VMOV     r2,r3,d0
000fc4  4832              LDR      r0,|L1.4240|
000fc6  ed900b00          VLDR     d0,[r0,#0]
000fca  ec510b10          VMOV     r0,r1,d0
000fce  f7fffffe          BL       __aeabi_cdcmple
000fd2  d205              BCS      |L1.4064|
;;;399    		t = .15;
000fd4  ed9f0b3f          VLDR     d0,|L1.4308|
000fd8  4830              LDR      r0,|L1.4252|
000fda  ed800b00          VSTR     d0,[r0,#0]
000fde  e024              B        |L1.4138|
                  |L1.4064|
;;;400    	}
;;;401    	else if (AvK < calspeed16){
000fe0  483e              LDR      r0,|L1.4316|
000fe2  ed900b00          VLDR     d0,[r0,#0]
000fe6  ec532b10          VMOV     r2,r3,d0
000fea  4829              LDR      r0,|L1.4240|
000fec  ed900b00          VLDR     d0,[r0,#0]
000ff0  ec510b10          VMOV     r0,r1,d0
000ff4  f7fffffe          BL       __aeabi_cdcmple
000ff8  d205              BCS      |L1.4102|
;;;402    		t = .16;
000ffa  ed9f0b39          VLDR     d0,|L1.4320|
000ffe  4827              LDR      r0,|L1.4252|
001000  ed800b00          VSTR     d0,[r0,#0]
001004  e011              B        |L1.4138|
                  |L1.4102|
;;;403    	}
;;;404    	else if (AvK < calspeed17){
001006  4838              LDR      r0,|L1.4328|
001008  ed900b00          VLDR     d0,[r0,#0]
00100c  ec532b10          VMOV     r2,r3,d0
001010  481f              LDR      r0,|L1.4240|
001012  ed900b00          VLDR     d0,[r0,#0]
001016  ec510b10          VMOV     r0,r1,d0
00101a  f7fffffe          BL       __aeabi_cdcmple
00101e  d204              BCS      |L1.4138|
;;;405    		t = .17;
001020  ed9f0b32          VLDR     d0,|L1.4332|
001024  481d              LDR      r0,|L1.4252|
001026  ed800b00          VSTR     d0,[r0,#0]
                  |L1.4138|
;;;406    	}
;;;407    	//stops motor and prints T function
;;;408    	stopmotor();
00102a  f7fffffe          BL       stopmotor
;;;409    	printf("K = %.2f, ", k);
00102e  4831              LDR      r0,|L1.4340|
001030  ed900b00          VLDR     d0,[r0,#0]
001034  ec532b10          VMOV     r2,r3,d0
001038  a02f              ADR      r0,|L1.4344|
00103a  f7fffffe          BL       __2printf
;;;410    	printf("Avk = %.2f\n", AvK);
00103e  4814              LDR      r0,|L1.4240|
001040  ed900b00          VLDR     d0,[r0,#0]
001044  ec532b10          VMOV     r2,r3,d0
001048  a02e              ADR      r0,|L1.4356|
00104a  f7fffffe          BL       __2printf
;;;411    	printf("Time const = %.2f, ", t);
00104e  4813              LDR      r0,|L1.4252|
001050  ed900b00          VLDR     d0,[r0,#0]
001054  ec532b10          VMOV     r2,r3,d0
001058  a02d              ADR      r0,|L1.4368|
00105a  f7fffffe          BL       __2printf
;;;412    	printf("Voltage = %.2f\n\n", voltage);
00105e  4831              LDR      r0,|L1.4388|
001060  ed900b00          VLDR     d0,[r0,#0]
001064  ec532b10          VMOV     r2,r3,d0
001068  a02f              ADR      r0,|L1.4392|
00106a  f7fffffe          BL       __2printf
;;;413    	printf("System transfer function is %.2f / (%.2ft + 1)\n\n", k, t);
00106e  480b              LDR      r0,|L1.4252|
001070  ed900b00          VLDR     d0,[r0,#0]
001074  ed8d0b00          VSTR     d0,[sp,#0]
001078  481e              LDR      r0,|L1.4340|
00107a  ed900b00          VLDR     d0,[r0,#0]
00107e  ec532b10          VMOV     r2,r3,d0
001082  a02e              ADR      r0,|L1.4412|
001084  f7fffffe          BL       __2printf
;;;414    }
001088  bd1c              POP      {r2-r4,pc}
;;;415    	
                          ENDP

00108a  0000              DCW      0x0000
                  |L1.4236|
                          DCD      calspeed10
                  |L1.4240|
                          DCD      AvK
                  |L1.4244|
001094  9999999a          DCFD     0x3fb999999999999a ; 0.10000000000000001
001098  3fb99999
                  |L1.4252|
                          DCD      t
                  |L1.4256|
                          DCD      calspeed11
                  |L1.4260|
0010a4  c28f5c29          DCFD     0x3fbc28f5c28f5c29 ; 0.11
0010a8  3fbc28f5
                  |L1.4268|
                          DCD      calspeed12
                  |L1.4272|
0010b0  eb851eb8          DCFD     0x3fbeb851eb851eb8 ; 0.12
0010b4  3fbeb851
                  |L1.4280|
                          DCD      calspeed13
                  |L1.4284|
0010bc  0a3d70a4          DCFD     0x3fc0a3d70a3d70a4 ; 0.13
0010c0  3fc0a3d7
                  |L1.4292|
                          DCD      calspeed14
                  |L1.4296|
0010c8  1eb851ec          DCFD     0x3fc1eb851eb851ec ; 0.14000000000000001
0010cc  3fc1eb85
                  |L1.4304|
                          DCD      calspeed15
                  |L1.4308|
0010d4  33333333          DCFD     0x3fc3333333333333 ; 0.14999999999999999
0010d8  3fc33333
                  |L1.4316|
                          DCD      calspeed16
                  |L1.4320|
0010e0  47ae147b          DCFD     0x3fc47ae147ae147b ; 0.16
0010e4  3fc47ae1
                  |L1.4328|
                          DCD      calspeed17
                  |L1.4332|
0010ec  5c28f5c3          DCFD     0x3fc5c28f5c28f5c3 ; 0.17000000000000001
0010f0  3fc5c28f
                  |L1.4340|
                          DCD      k
                  |L1.4344|
0010f8  4b203d20          DCB      "K = %.2f, ",0
0010fc  252e3266
001100  2c2000  
001103  00                DCB      0
                  |L1.4356|
001104  41766b20          DCB      "Avk = %.2f\n",0
001108  3d20252e
00110c  32660a00
                  |L1.4368|
001110  54696d65          DCB      "Time const = %.2f, ",0
001114  20636f6e
001118  7374203d
00111c  20252e32
001120  662c2000
                  |L1.4388|
                          DCD      voltage
                  |L1.4392|
001128  566f6c74          DCB      "Voltage = %.2f\n\n",0
00112c  61676520
001130  3d20252e
001134  32660a0a
001138  00      
001139  00                DCB      0
00113a  00                DCB      0
00113b  00                DCB      0
                  |L1.4412|
00113c  53797374          DCB      "System transfer function is %.2f / (%.2ft + 1)\n\n",0
001140  656d2074
001144  72616e73
001148  66657220
00114c  66756e63
001150  74696f6e
001154  20697320
001158  252e3266
00115c  202f2028
001160  252e3266
001164  74202b20
001168  31290a0a
00116c  00      
00116d  00                DCB      0
00116e  00                DCB      0
00116f  00                DCB      0

                          AREA ||i.initialize_aandw||, CODE, READONLY, ALIGN=2

                  initialize_aandw PROC
;;;38     	
;;;39     void initialize_aandw()
000000  b510              PUSH     {r4,lr}
;;;40     {
000002  ed2d8b04          VPUSH    {d8-d9}
;;;41     	int i;
;;;42     	for (i = 0; i< 36;i++)
000006  2400              MOVS     r4,#0
000008  e012              B        |L2.48|
                  |L2.10|
;;;43     	{
;;;44     		aandw[i] = i* 3.141719;
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       __aeabi_i2d
000010  ec410b19          VMOV     d9,r0,r1
000014  ed9f0b09          VLDR     d0,|L2.60|
000018  ec532b10          VMOV     r2,r3,d0
00001c  f7fffffe          BL       __aeabi_dmul
000020  ec410b18          VMOV     d8,r0,r1
000024  f7fffffe          BL       __aeabi_d2f
000028  4906              LDR      r1,|L2.68|
00002a  f8410024          STR      r0,[r1,r4,LSL #2]
00002e  1c64              ADDS     r4,r4,#1              ;42
                  |L2.48|
000030  2c24              CMP      r4,#0x24              ;42
000032  dbea              BLT      |L2.10|
;;;45     	}
;;;46     }
000034  ecbd8b04          VPOP     {d8-d9}
000038  bd10              POP      {r4,pc}
;;;47     
                          ENDP

00003a  0000              DCW      0x0000
                  |L2.60|
00003c  9231c64c          DCFD     0x4009223d9231c64c ; 3.1417190000000002
000040  4009223d
                  |L2.68|
                          DCD      aandw

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  aandw
                          %        144

                          AREA ||.data||, DATA, ALIGN=3

                  ||ct||
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  i
                          DCD      0x00000000
                  A
                          DCD      0x00000001
                          DCD      0x00000000
                  calspeed
                          %        8
                  tempspeed
                          %        8
                  voltage
                          %        8
                  calspeed0
                          %        8
                  calspeed1
                          %        8
                  calspeed2
                          %        8
                  calspeed3
                          %        8
                  calspeed4
                          %        8
                  calspeed5
                          %        8
                  calspeed6
                          %        8
                  calspeed7
                          %        8
                  calspeed8
                          %        8
                  calspeed9
                          %        8
                  calspeed10
                          %        8
                  calspeed11
                          %        8
                  calspeed12
                          %        8
                  calspeed13
                          %        8
                  calspeed14
                          %        8
                  calspeed15
                          %        8
                  calspeed16
                          %        8
                  calspeed17
                          %        8
                  calspeed18
                          %        8
                  calspeed19
                          %        8
                  calspeed20
                          %        8
                  calspeed21
                          %        8
                  calspeed22
                          %        8
                  calspeed23
                          %        8
                  calspeed24
                          %        8
                  calspeed25
                          %        8
                  k
                          %        8
                  t
                          %        8
                  AvK
                          %        8
